 <includes>
	<include file="Animations.xml" />
	<include file="Colors.xml" />
	<include file="Constants.xml" />
	<include file="Defaults.xml" />
	<include file="Parameters.xml" />
	<include file="script-skinshortcuts-includes.xml"/>
	<include file="Viewtype_50_List.xml" />
  <include file="Viewtype_500_Detailed_List.xml" />
	<include file="Viewtype_501_Billboard.xml" />
	<include file="Viewtype_502_Showcase.xml" />
	<include file="Viewtype_504_Strip.xml" />
	<include file="Viewtype_505_Grid.xml" />
	<include file="Variables.xml" />

  <!--Expressions-->
  <expression name="All_Containers">Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Container.Content(artists) | Container.Content(albums) | Container.Content(songs) | Container.Content(Addons)</expression>
  <expression name="Video_Containers">Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)</expression>
  <expression name="Fanart_Containers">Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Container.Content(artists)</expression>
  <expression name="Logo_Containers">[Container.Content(movies) | Container.Content(tvshows)]</expression>
  <expression name="Flag_Containers">[Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes)]</expression>
  <expression name="Background_IsFanart">[[$EXP[ListView_IsVisible] + $EXP[Fanart_Containers] + $EXP[ListView_Fanart_Background_IsVisible]] | $EXP[BillboardView_IsVisible]] + ![String.IsEmpty(ListItem.Art(fanart)) + String.IsEmpty(ListItem.Icon)]</expression>

  <expression name="ListView_IsVisible">Control.IsVisible(50) | String.IsEqual(Container.ViewMode,List)</expression>
  <expression name="ListView_Fanart_Background_IsVisible">Skin.String(ListView_Fanart,Background) | String.IsEmpty(Skin.String(ListView_Fanart))</expression>
  <expression name="ListView_Details_Info_IsVisible">Skin.String(ListView_Details,TitleAndInfo)</expression>
  <expression name="ListView_Flags_IsOn">$EXP[ListView_IsVisible] + !Skin.String(ListView_Flags,Off)</expression>
  <expression name="ListView_Flags_Studio_IsVisible">$EXP[ListView_IsVisible] + [Skin.String(ListView_Flags,All) | Skin.String(ListView_Flags,Studio) | String.IsEmpty(Skin.String(ListView_Flags))]</expression>
  <expression name="ListView_Flags_Rating_IsVisible">$EXP[ListView_IsVisible] + [Skin.String(ListView_Flags,All) | Skin.String(ListView_Flags,Rating) | String.IsEmpty(Skin.String(ListView_Flags))]</expression>
  <expression name="ListView_Flags_Studio_Shift">Skin.String(ListView_Flags,Studio) | [Skin.String(ListView_Flags,All) + String.IsEqual(Control.GetLabel(915),flags/blank.png)]</expression>

  <expression name="DetailedListView_IsVisible">Control.IsVisible(500) | String.IsEqual(Container.ViewMode,DetailedList)</expression>
  <expression name="DetailedListView_Display_IsFanart">Skin.String(DetailedListView_Display,Fanart) | String.IsEmpty(Skin.String(DetailedListView_Display))</expression>
  <expression name="DetailedListView_Display_IsPosters">Skin.String(DetailedListView_Display,Posters)</expression>
  <expression name="DetailedListView_Display_IsSquare">Skin.String(DetailedListView_Display,Square)</expression>

  <expression name="BillboardView_IsVisible">Control.IsVisible(501) | String.IsEqual(Container.ViewMode,Billboard)</expression>
  <expression name="BillboardView_Details_Info_IsVisible">Skin.String(BillboardView_Details,TitleAndInfo) | Skin.String(BillboardView_Details,All) | String.IsEmpty(Skin.String(BillboardView_Details))</expression>
  <expression name="BillboardView_Details_Plot_IsVisible">Skin.String(BillboardView_Details,TitleAndPlot) | Skin.String(BillboardView_Details,All) | String.IsEmpty(Skin.String(BillboardView_Details))</expression>
  <expression name="BillboardView_Details_Logo_IsVisible">!Skin.String(BillboardView_Details,Off) + Skin.String(BillboardView_Logo,On) + !String.IsEmpty(ListItem.Art(clearlogo))</expression>
  <expression name="BillboardView_Flags_IsOn">$EXP[BillboardView_IsVisible] + !Skin.String(BillboardView_Flags,Off)</expression>
  <expression name="BillboardView_Flags_Studio_IsVisible">$EXP[BillboardView_IsVisible] + [Skin.String(BillboardView_Flags,All) | Skin.String(BillboardView_Flags,Studio) | String.IsEmpty(Skin.String(BillboardView_Flags))]</expression>
  <expression name="BillboardView_Flags_Rating_IsVisible">$EXP[BillboardView_IsVisible] + [Skin.String(BillboardView_Flags,All) | Skin.String(BillboardView_Flags,Rating) | String.IsEmpty(Skin.String(BillboardView_Flags))]</expression>
  <expression name="BillboardView_Flags_Studio_Shift">Skin.String(BillboardView_Flags,Studio) | [Skin.String(BillboardView_Flags,All) + String.IsEqual(Control.GetLabel(915),flags/blank.png)]</expression>

  <expression name="ShowcaseView_IsVisible">Control.IsVisible(502) | String.IsEqual(Container.ViewMode,Showcase)</expression>
  <expression name="ShowcaseView_Display_IsPosters">Skin.String(ShowcaseView_Display,Posters) + !Container.Content(episodes) + !Container.Content(artists) + !Container.Content(albums)</expression>
  <expression name="ShowcaseView_Display_IsSquare">[Skin.String(ShowcaseView_Display,Square) | String.IsEmpty(Skin.String(ShowcaseView_Display)) | Container.Content(episodes) | Container.Content(artists) | Container.Content(albums)]</expression>
  <expression name="ShowcaseView_Details_Info_IsVisible">Skin.String(ShowcaseView_Details,TitleAndInfo) | Skin.String(ShowcaseView_Details,All) | String.IsEmpty(Skin.String(ShowcaseView_Details))</expression>
  <expression name="ShowcaseView_Details_Plot_IsVisible">Skin.String(ShowcaseView_Details,TitleAndPlot) | Skin.String(ShowcaseView_Details,All) | String.IsEmpty(Skin.String(ShowcaseView_Details))</expression>
  <expression name="ShowcaseView_Details_Logo_IsVisible">!Skin.String(ShowcaseView_Details,Off) + Skin.String(ShowcaseView_Logo,On) + !String.IsEmpty(ListItem.Art(clearlogo))</expression>
  <expression name="ShowcaseView_Flags_IsOn">$EXP[ShowcaseView_IsVisible] + !Skin.String(ShowcaseView_Flags,Off)</expression>
  <expression name="ShowcaseView_Flags_Studio_IsVisible">$EXP[ShowcaseView_IsVisible] + [Skin.String(ShowcaseView_Flags,All) | Skin.String(ShowcaseView_Flags,Studio) | String.IsEmpty(Skin.String(ShowcaseView_Flags))]</expression>
  <expression name="ShowcaseView_Flags_Rating_IsVisible">$EXP[ShowcaseView_IsVisible] + [Skin.String(ShowcaseView_Flags,All) | Skin.String(ShowcaseView_Flags,Rating) | String.IsEmpty(Skin.String(ShowcaseView_Flags))]</expression>
  <expression name="ShowcaseView_Flags_Studio_Shift">Skin.String(ShowcaseView_Flags,Studio) | [Skin.String(ShowcaseView_Flags,All) + String.IsEqual(Control.GetLabel(915),flags/blank.png)]</expression>

  <expression name="StripView_IsVisible">Control.IsVisible(504) | String.IsEqual(Container.ViewMode,Strip)</expression>
  <expression name="StripView_Display_IsPosters">[Skin.String(StripView_Display,Posters) | String.IsEmpty(Skin.String(StripView_Display))] + !Container.Content(episodes) + !Container.Content(artists) + !Container.Content(albums)</expression>
  <expression name="StripView_Display_IsFanart">[Skin.String(StripView_Display,Fanart) | Container.Content(episodes)] + !Container.Content(albums)</expression>
  <expression name="StripView_Display_IsSquare">[Skin.String(StripView_Display,Square) | Container.Content(albums)] + !Container.Content(episodes)</expression>
  <expression name="StripView_Details_Info_IsVisible">Skin.String(StripView_Details,TitleAndInfo) | Skin.String(StripView_Details,All) | String.IsEmpty(Skin.String(StripView_Details))</expression>
  <expression name="StripView_Details_Plot_IsVisible">Skin.String(StripView_Details,TitleAndPlot) | Skin.String(StripView_Details,All) | String.IsEmpty(Skin.String(StripView_Details))</expression>
  <expression name="StripView_Details_Logo_IsVisible">!Skin.String(StripView_Details,Off) + Skin.String(StripView_Logo,On) + !String.IsEmpty(ListItem.Art(clearlogo))</expression>
  <expression name="StripView_Flags_IsOn">$EXP[StripView_IsVisible] + !Skin.String(StripView_Flags,Off)</expression>
  <expression name="StripView_Flags_Studio_IsVisible">$EXP[StripView_IsVisible] + [Skin.String(StripView_Flags,All) | Skin.String(StripView_Flags,Studio) | String.IsEmpty(Skin.String(StripView_Flags))]</expression>
  <expression name="StripView_Flags_Rating_IsVisible">$EXP[StripView_IsVisible] + [Skin.String(StripView_Flags,All) | Skin.String(StripView_Flags,Rating) | String.IsEmpty(Skin.String(StripView_Flags))]</expression>
  <expression name="StripView_Flags_Studio_Shift">Skin.String(StripView_Flags,Studio) | [Skin.String(StripView_Flags,All) + String.IsEqual(Control.GetLabel(915),flags/blank.png)]</expression>

  <expression name="GridView_IsVisible">Control.IsVisible(505) | String.IsEqual(Container.ViewMode,Grid)</expression>
  <expression name="GridView_Display_IsFanart">[Skin.String(GridView_Display,Fanart) | String.IsEmpty(Skin.String(GridView_Display)) | Container.Content(episodes)] + !Container.Content(albums)</expression>
  <expression name="GridView_Display_IsPosters">Skin.String(GridView_Display,Posters) + !Container.Content(episodes) + !Container.Content(artists) + !Container.Content(albums)</expression>
  <expression name="GridView_Display_IsSquare">[Skin.String(GridView_Display,Square) | Container.Content(albums)] + !Container.Content(episodes)</expression>
  <expression name="GridView_Details_Enabled">Skin.String(GridView_Details,Title) | Skin.String(GridView_Details,TitleAndInfo)</expression>
  <expression name="GridView_Details_Disabled">Skin.String(GridView_Details,Off) | String.IsEmpty(Skin.String(GridView_Details))</expression>

  <expression name="Icon_240_IsVisible">String.IsEqual(Container.ViewMode,Strip)</expression>
  <expression name="Icon_180_IsVisible">!$EXP[Icon_240_IsVisible]</expression>
  <expression name="DialogVisible">String.IsEqual(window(home).property(OptionsMenu),Active) | Window.IsVisible(contextmenu) | Window.IsVisible(shutdownmenu) | Window.IsVisible(okdialog) | Window.IsVisible(yesnodialog) | Window.IsVisible(progressdialog) | Window.IsVisible(selectdialog) | Window.IsVisible(movieinformation)</expression>
  <expression name="VolumeBarVisible">String.IsEqual(window(home).property(OptionsMenu),Active) | Window.IsVisible(contextmenu) | Window.IsVisible(shutdownmenu) | Window.IsVisible(okdialog) | Window.IsVisible(yesnodialog) | Window.IsVisible(progressdialog) | Window.IsVisible(selectdialog) | Window.IsVisible(movieinformation)</expression>

	<!-- Fullscreen dimensions -->
	<include name="FullscreenDimensions">
		<left>0</left>
		<top>0</top>
		<width>1920</width>
		<height>1080</height>
	</include>

	<!-- Fanart-->
	<include name="Fanart">
		<control type="image">
			<visible>Container.Content(movies) | Container.Content(sets) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Container.Content(artists)</visible>
			<aspectratio>scale</aspectratio>
			<fadetime>380</fadetime>
			<texture background="true">$VAR[Thumbnail(0)Content]</texture>
		</control>
	</include>

	<!-- Random Fanart-->
	<include name="FanartSlideshow">
    <param name="path" default="videodb://movies/titles/"/>
      <definition>
    		<control type="list" id="12341">
    			<content sortby="random" limit="30">$PARAM[path]</content>
    <!--	<content sortby="random" limit="1">videodb://tvshows/titles/</content>
    			<content sortby="random" limit="1">videodb://movies/titles/</content>
    			<content sortby="random" limit="3">videodb://tvshows/titles/</content>
    			<content sortby="random" limit="2">videodb://movies/titles/</content>
    			<content sortby="random" limit="2">videodb://tvshows/titles/</content>
    			<content sortby="random" limit="3">videodb://movies/titles/</content>
    			<content sortby="random" limit="2">videodb://tvshows/titles/</content>
    			<content sortby="random" limit="1">videodb://movies/titles/</content>
    			<content sortby="random" limit="1">videodb://tvshows/titles/</content>-->
    			<autoscroll time="7000">true</autoscroll> <!-- Time to show each image, in milliseconds -->
    			<itemlayout />
    			<focusedlayout />
    		</control>
    		<control type="multiimage" id="12340">
    			<imagepath background="true">$INFO[Container(12341).ListItem.Art(fanart)]</imagepath>
    			<aspectratio>scale</aspectratio>
    			<fadetime>600</fadetime>
    			<pauseatend>10000</pauseatend>
    			<randomize>true</randomize>
    		</control>
      </definition>
	</include>

	<include name="ViewtypeOverlay">
    <param name="visible" default="true"/>
    <definition>
  		<control type="image">
        <visible>$PARAM[visible]</visible>
  			<texture colordiffuse="$VAR[DarkColor]">$VAR[ViewtypeOverlayTexture]</texture>
  		</control>
    </definition>
	</include>

  <include name="DialogBackground">
    <control type="image">
      <texture colordiffuse="$VAR[SecondaryColor]">$VAR[DialogBackgroundTexture]</texture>
    </control>
  </include>

  <include name="CustomViewsBackground">
    <control type="group">
      <include>FullscreenDimensions</include>
      <control type="image">
        <aspectratio>stretch</aspectratio>
        <texture colordiffuse="$VAR[SecondaryColor]">views/white_100.png</texture>
      </control>
      <control type="image">
        <visible>$EXP[Background_IsFanart]</visible>
        <texture colordiffuse="$VAR[DarkColor]">views/white_100.png</texture>
      </control>
      <control type="image">
        <visible>Skin.String(Theme,Light)</visible>
        <aspectratio>stretch</aspectratio>
        <texture colordiffuse="$VAR[DarkColor]">views/gradient_light-background.png</texture>
      </control>
    </control>
  </include>

  <!--Options Menu Label Focused-->
	<include name="OptionsMenuLabelFocused">
		<definition>
			<height>70</height>
			<font>List_Title_Focused</font>
			<textcolor>$VAR[PrimaryColor]</textcolor>
		</definition>
	</include>

	<!--Options Menu Label Unfocused-->
	<include name="OptionsMenuLabelUnfocused">
		<definition>
			<height>55</height>
			<font>List_Title_Unfocused</font>
			<textcolor>$VAR[PrimaryColor]</textcolor>
		</definition>
	</include>

  <!--Home Menu Label Focused-->
	<include name="HomeMenuLabelFocused">
		<param name="hiddenid"/>
		<param name="position"/>
		<param name="top" default="0"/>
		<param name="height" default="70"/>
		<param name="font" default="List_Title_Focused"/>
		<param name="textcolor" default="$VAR[PrimaryColor]"/>
		<definition>
			<control type="label">
				<top>$PARAM[top]</top>
				<height>$PARAM[height]</height>
				<width>auto</width>
				<font>$PARAM[font]</font>
				<textcolor>$PARAM[textcolor]</textcolor>
				<label>$INFO[Container($PARAM[hiddenid]).ListItemPosition($PARAM[position]).Label]</label>
				<visible>String.IsEqual(Container($PARAM[hiddenid]).ListItemPosition($PARAM[position]).Label, Container($PARAM[hiddenid]).ListItem.Label)</visible>
			</control>
		</definition>
	</include>

	<!--Home Menu Label Unfocused-->
	<include name="HomeMenuLabelUnfocused">
		<param name="top" default="13"/>
		<param name="height" default="55"/>
		<param name="font" default="Main_Menu_Unfocused"/>
		<param name="textcolor" default="$VAR[PrimaryColor]"/>
		<definition>
			<height>$PARAM[height]</height>
			<top>$PARAM[top]</top>
			<width>auto</width>
			<font>$PARAM[font]</font>
			<textcolor>$PARAM[textcolor]</textcolor>
		</definition>
	</include>

	<!--Home Menu Label Unfocused Content-->
	<include name="HomeMenuLabelUnfocusedContent">
		<param name="hiddenid"/>"
		<param name="previousposition"/>
		<param name="position"/>
		<param name="nextposition"/>
    <param name="top" default="13"/>
		<param name="height" default="55"/>
		<param name="font" default="Main_Menu_Unfocused"/>
		<param name="textcolor" default="$VAR[PrimaryColor]"/>
		<definition>
			<control type="label">
				<description>position is not empty. previousposition is focused. nextposition is empty. position is last in list</description>
        <visible>!String.IsEmpty(Container($PARAM[hiddenid]).ListItemPosition($PARAM[position]).Label)</visible>
				<visible>!String.IsEqual(Container($PARAM[hiddenid]).ListItemPosition($PARAM[position]).Label, Container($PARAM[hiddenid]).ListItem.Label)</visible>
				<visible>String.IsEqual(Container($PARAM[hiddenid]).ListItemPosition($PARAM[previousposition]).Label, Container($PARAM[hiddenid]).ListItem.Label)</visible>
				<visible>String.IsEmpty(Container($PARAM[hiddenid]).ListItemPosition($PARAM[nextposition]).Label)</visible>
				<label>$INFO[Container($PARAM[hiddenid]).ListItemPosition($PARAM[position]).Label, / ]</label>
				<include content="HomeMenuLabelUnfocused">
					<param name="top" value="$PARAM[top]"/>
					<param name="height" value="$PARAM[height]"/>
					<param name="font" value="$PARAM[font]"/>
					<param name="textcolor" value="$PARAM[textcolor]"/>
				</include>
			</control>
			<control type="label">
				<description>previousposition is focused. nextposition is not empty. position is not last in list</description>
				<visible>!String.IsEqual(Container($PARAM[hiddenid]).ListItemPosition($PARAM[position]).Label, Container($PARAM[hiddenid]).ListItem.Label)</visible>
				<visible>String.IsEqual(Container($PARAM[hiddenid]).ListItemPosition($PARAM[previousposition]).Label, Container($PARAM[hiddenid]).ListItem.Label)</visible>
				<visible>!String.IsEmpty(Container($PARAM[hiddenid]).ListItemPosition($PARAM[nextposition]).Label)</visible>
				<label>$INFO[Container($PARAM[hiddenid]).ListItemPosition($PARAM[position]).Label, / , / ]</label>
				<include content="HomeMenuLabelUnfocused">
					<param name="top" value="$PARAM[top]"/>
					<param name="height" value="$PARAM[height]"/>
					<param name="font" value="$PARAM[font]"/>
					<param name="textcolor" value="$PARAM[textcolor]"/>
				</include>
			</control>
			<control type="label">
				<description>position is not empty. previousposition is not focused. position is not focused. nextposition is empty. position is last in list</description>
        <visible>!String.IsEmpty(Container($PARAM[hiddenid]).ListItemPosition($PARAM[position]).Label)</visible>
				<visible>!String.IsEqual(Container($PARAM[hiddenid]).ListItemPosition($PARAM[position]).Label, Container($PARAM[hiddenid]).ListItem.Label)</visible>
				<visible>!String.IsEqual(Container($PARAM[hiddenid]).ListItemPosition($PARAM[previousposition]).Label, Container($PARAM[hiddenid]).ListItem.Label)</visible>
				<visible>String.IsEmpty(Container($PARAM[hiddenid]).ListItemPosition($PARAM[nextposition]).Label)</visible>
				<label>$INFO[Container($PARAM[hiddenid]).ListItemPosition($PARAM[position]).Label]</label>
				<include content="HomeMenuLabelUnfocused">
					<param name="top" value="$PARAM[top]"/>
					<param name="height" value="$PARAM[height]"/>
					<param name="font" value="$PARAM[font]"/>
					<param name="textcolor" value="$PARAM[textcolor]"/>
				</include>
			</control>
			<control type="label">
				<description>previousposition is not focused. position is not focused. nextposition is not empty. position is not last in list</description>
				<visible>!String.IsEqual(Container($PARAM[hiddenid]).ListItemPosition($PARAM[position]).Label, Container($PARAM[hiddenid]).ListItem.Label)</visible>
				<visible>!String.IsEqual(Container($PARAM[hiddenid]).ListItemPosition($PARAM[previousposition]).Label, Container($PARAM[hiddenid]).ListItem.Label)</visible>
				<visible>!String.IsEmpty(Container($PARAM[hiddenid]).ListItemPosition($PARAM[nextposition]).Label)</visible>
				<label>$INFO[Container($PARAM[hiddenid]).ListItemPosition($PARAM[position]).Label,, / ]</label>
				<include content="HomeMenuLabelUnfocused">
					<param name="top" value="$PARAM[top]"/>
					<param name="height" value="$PARAM[height]"/>
					<param name="font" value="$PARAM[font]"/>
					<param name="textcolor" value="$PARAM[textcolor]"/>
				</include>
			</control>
		</definition>
	</include>

	<!--Dummy Horizontal List-->
	<include name="DummyHorizontalList">
		<param name="dummyid"/>
		<param name="hiddenid"/>
		<param name="top" default="505"/>
		<param name="height" default="80"/>
		<param name="itemgap" default="0"/>
		<param name="focusedtop" default="0"/>
		<param name="focusedheight" default="70"/>
		<param name="focusedfont" default="List_Title_Focused"/>
		<param name="focusedtextcolor" default="$VAR[PrimaryColor]"/>
		<param name="unfocusedtop" default="18"/>
		<param name="unfocusedheight" default="55"/>
		<param name="unfocusedfont" default="Main_Menu_Unfocused"/>
		<param name="unfocusedtextcolor" default="$VAR[PrimaryColor]"/>
 		<definition>
			<control type="grouplist" id="$PARAM[dummyid]">
				<top>$PARAM[top]</top>
				<left>60</left>
				<width>1800</width>
				<height>$PARAM[height]</height>
				<orientation>horizontal</orientation>
				<align>center</align>
				<itemgap>$PARAM[itemgap]</itemgap>
				<usecontrolcoords>true</usecontrolcoords>
				<scrolltime tween="sine" easing="inout">380</scrolltime>
				<animation effect="slide" start="0" end="-120" condition="!Container($PARAM[hiddenid]).OnScrollNext" reversible="false" time="200" tween="sine" easing="inout">Conditional</animation>
				<animation effect="slide" start="0" end="120" condition="!Container($PARAM[hiddenid]).OnScrollPrevious" reversible="false" time="200" tween="sine" easing="inout">Conditional</animation>

				<!--Previous-->
				<control type="label">
					<visible>Container($PARAM[hiddenid]).HasPrevious</visible>
					<label>...</label>
					<include content="HomeMenuLabelUnfocused">
						<param name="top" value="$PARAM[unfocusedtop]"/>
						<param name="height" value="$PARAM[unfocusedheight]"/>
						<param name="font" value="$PARAM[unfocusedfont]"/>
						<param name="textcolor" value="$PARAM[unfocusedtextcolor]"/>
					</include>
				</control>

        <!--Position 0 Focused-->
				<include content="HomeMenuLabelFocused">
					<param name="hiddenid" value="$PARAM[hiddenid]"/>
					<param name="position" value="0"/>
					<param name="top" value="$PARAM[focusedtop]"/>
					<param name="height" value="$PARAM[focusedheight]"/>
					<param name="font" value="$PARAM[focusedfont]"/>
					<param name="textcolor" value="$PARAM[focusedtextcolor]"/>
				</include>
				<!--Position 0 Unfocused-->
				<include content="HomeMenuLabelUnfocusedContent">
					<param name="hiddenid" value="$PARAM[hiddenid]"/>
					<param name="previousposition" value="-1"/>
					<param name="position" value="0"/>
					<param name="nextposition" value="1"/>
					<param name="top" value="$PARAM[unfocusedtop]"/>
					<param name="height" value="$PARAM[unfocusedheight]"/>
					<param name="font" value="$PARAM[unfocusedfont]"/>
					<param name="textcolor" value="$PARAM[unfocusedtextcolor]"/>
				</include>

				<!--Position 1 Focused-->
				<include content="HomeMenuLabelFocused">
					<param name="hiddenid" value="$PARAM[hiddenid]"/>
					<param name="position" value="1"/>
					<param name="top" value="$PARAM[focusedtop]"/>
					<param name="height" value="$PARAM[focusedheight]"/>
					<param name="font" value="$PARAM[focusedfont]"/>
					<param name="textcolor" value="$PARAM[focusedtextcolor]"/>
				</include>
				<!--Position 1 Unfocused-->
				<include content="HomeMenuLabelUnfocusedContent">
					<param name="hiddenid" value="$PARAM[hiddenid]"/>
					<param name="previousposition" value="0"/>
					<param name="position" value="1"/>
					<param name="nextposition" value="2"/>
					<param name="top" value="$PARAM[unfocusedtop]"/>
					<param name="height" value="$PARAM[unfocusedheight]"/>
					<param name="font" value="$PARAM[unfocusedfont]"/>
					<param name="textcolor" value="$PARAM[unfocusedtextcolor]"/>
				</include>

				<!--Position 2 Focused-->
				<include content="HomeMenuLabelFocused">
					<param name="hiddenid" value="$PARAM[hiddenid]"/>
					<param name="position" value="2"/>
					<param name="top" value="$PARAM[focusedtop]"/>
					<param name="height" value="$PARAM[focusedheight]"/>
					<param name="font" value="$PARAM[focusedfont]"/>
					<param name="textcolor" value="$PARAM[focusedtextcolor]"/>
				</include>
				<!--Position 2 Unfocused-->
				<include content="HomeMenuLabelUnfocusedContent">
					<param name="hiddenid" value="$PARAM[hiddenid]"/>
					<param name="previousposition" value="1"/>
					<param name="position" value="2"/>
					<param name="nextposition" value="3"/>
					<param name="top" value="$PARAM[unfocusedtop]"/>
					<param name="height" value="$PARAM[unfocusedheight]"/>
					<param name="font" value="$PARAM[unfocusedfont]"/>
					<param name="textcolor" value="$PARAM[unfocusedtextcolor]"/>
				</include>

				<!--Position 3 Focused-->
				<include content="HomeMenuLabelFocused">
					<param name="hiddenid" value="$PARAM[hiddenid]"/>
					<param name="position" value="3"/>
					<param name="top" value="$PARAM[focusedtop]"/>
					<param name="height" value="$PARAM[focusedheight]"/>
					<param name="font" value="$PARAM[focusedfont]"/>
					<param name="textcolor" value="$PARAM[focusedtextcolor]"/>
				</include>
				<!--Position 3 Unfocused-->
				<include content="HomeMenuLabelUnfocusedContent">
					<param name="hiddenid" value="$PARAM[hiddenid]"/>
					<param name="previousposition" value="2"/>
					<param name="position" value="3"/>
					<param name="nextposition" value="4"/>
					<param name="top" value="$PARAM[unfocusedtop]"/>
					<param name="height" value="$PARAM[unfocusedheight]"/>
					<param name="font" value="$PARAM[unfocusedfont]"/>
					<param name="textcolor" value="$PARAM[unfocusedtextcolor]"/>
				</include>

				<!--Position 4 Focused-->
				<include content="HomeMenuLabelFocused">
					<param name="hiddenid" value="$PARAM[hiddenid]"/>
					<param name="position" value="4"/>
					<param name="top" value="$PARAM[focusedtop]"/>
					<param name="height" value="$PARAM[focusedheight]"/>
					<param name="font" value="$PARAM[focusedfont]"/>
					<param name="textcolor" value="$PARAM[focusedtextcolor]"/>
				</include>
				<!--Position 4 Unfocused-->
				<include content="HomeMenuLabelUnfocusedContent">
					<param name="hiddenid" value="$PARAM[hiddenid]"/>
					<param name="previousposition" value="3"/>
					<param name="position" value="4"/>
					<param name="nextposition" value="5"/>
					<param name="top" value="$PARAM[unfocusedtop]"/>
					<param name="height" value="$PARAM[unfocusedheight]"/>
					<param name="font" value="$PARAM[unfocusedfont]"/>
					<param name="textcolor" value="$PARAM[unfocusedtextcolor]"/>
				</include>

				<!--Position 5 Focused-->
				<include content="HomeMenuLabelFocused">
					<param name="hiddenid" value="$PARAM[hiddenid]"/>
					<param name="position" value="5"/>
					<param name="top" value="$PARAM[focusedtop]"/>
					<param name="height" value="$PARAM[focusedheight]"/>
					<param name="font" value="$PARAM[focusedfont]"/>
					<param name="textcolor" value="$PARAM[focusedtextcolor]"/>
				</include>
				<!--Position 5 Unfocused-->
				<include content="HomeMenuLabelUnfocusedContent">
					<param name="hiddenid" value="$PARAM[hiddenid]"/>
					<param name="previousposition" value="4"/>
					<param name="position" value="5"/>
					<param name="nextposition" value="6"/>
					<param name="top" value="$PARAM[unfocusedtop]"/>
					<param name="height" value="$PARAM[unfocusedheight]"/>
					<param name="font" value="$PARAM[unfocusedfont]"/>
					<param name="textcolor" value="$PARAM[unfocusedtextcolor]"/>
				</include>

        <!--Position 6 Focused-->
        <include content="HomeMenuLabelFocused">
          <param name="hiddenid" value="$PARAM[hiddenid]"/>
          <param name="position" value="6"/>
          <param name="top" value="$PARAM[focusedtop]"/>
          <param name="height" value="$PARAM[focusedheight]"/>
          <param name="font" value="$PARAM[focusedfont]"/>
          <param name="textcolor" value="$PARAM[focusedtextcolor]"/>
        </include>
        <!--Position 6 Unfocused-->
        <include content="HomeMenuLabelUnfocusedContent">
          <param name="hiddenid" value="$PARAM[hiddenid]"/>
          <param name="previousposition" value="5"/>
          <param name="position" value="6"/>
          <param name="nextposition" value="7"/>
          <param name="top" value="$PARAM[unfocusedtop]"/>
          <param name="height" value="$PARAM[unfocusedheight]"/>
          <param name="font" value="$PARAM[unfocusedfont]"/>
          <param name="textcolor" value="$PARAM[unfocusedtextcolor]"/>
        </include>

        <!--Position 7 Focused-->
        <include content="HomeMenuLabelFocused">
          <param name="hiddenid" value="$PARAM[hiddenid]"/>
          <param name="position" value="7"/>
          <param name="top" value="$PARAM[focusedtop]"/>
          <param name="height" value="$PARAM[focusedheight]"/>
          <param name="font" value="$PARAM[focusedfont]"/>
          <param name="textcolor" value="$PARAM[focusedtextcolor]"/>
        </include>
        <!--Position 7 Unfocused-->
        <include content="HomeMenuLabelUnfocusedContent">
          <param name="hiddenid" value="$PARAM[hiddenid]"/>
          <param name="previousposition" value="6"/>
          <param name="position" value="7"/>
          <param name="nextposition" value="8"/>
          <param name="top" value="$PARAM[unfocusedtop]"/>
          <param name="height" value="$PARAM[unfocusedheight]"/>
          <param name="font" value="$PARAM[unfocusedfont]"/>
          <param name="textcolor" value="$PARAM[unfocusedtextcolor]"/>
        </include>

				<!--Next-->
				<control type="label">
					<include content="HomeMenuLabelUnfocused">
						<param name="top" value="$PARAM[unfocusedtop]"/>
						<param name="height" value="$PARAM[unfocusedheight]"/>
						<param name="font" value="$PARAM[unfocusedfont]"/>
						<param name="textcolor" value="$PARAM[unfocusedtextcolor]"/>
					</include>
					<visible>Container($PARAM[hiddenid]).HasNext</visible>
					<label>...</label>
				</control>

			</control>
		</definition>
	</include>

  <include name="ButtonLayout">
    <param name="buttonid" default=""/>
    <param name="left" default="0"/>
    <param name="top" default="0"/>
    <param name="width" default="120"/>
    <param name="height" default="120"/>
    <param name="symbolwidth" default="60"/>
    <param name="symbolleft" default="30"/>
    <param name="unfocusedcolor" default="$VAR[PrimaryColor]"/>
    <param name="unfocusedtexture" default=""/>
    <param name="focusedcolor" default="$VAR[PrimaryColor]"/>
    <param name="focusedtexture" default=""/>
    <definition>
      <control type="group">
        <visible>Control.IsVisible($PARAM[buttonid])</visible>
        <left>$PARAM[left]</left>
        <top>$PARAM[top]</top>
        <width>$PARAM[width]</width>
        <height>$PARAM[height]</height>
        <!--Unfocused-->
        <control type="image">
          <left>$PARAM[symbolleft]</left>
          <top>$PARAM[symbolleft]</top>
          <width>$PARAM[symbolwidth]</width>
          <height>$PARAM[symbolwidth]</height>
          <aspectratio>keep</aspectratio>
  				<texture colordiffuse="$PARAM[unfocusedcolor]">$PARAM[unfocusedtexture]</texture>
  				<visible>Control.IsVisible($PARAM[buttonid]) + !Control.HasFocus($PARAM[buttonid])</visible>
  			</control>
        <!--Focused-->
        <control type="image">
          <left>$PARAM[symbolleft]</left>
          <top>$PARAM[symbolleft]</top>
          <width>$PARAM[symbolwidth]</width>
          <height>$PARAM[symbolwidth]</height>
          <aspectratio>keep</aspectratio>
          <texture colordiffuse="$PARAM[focusedcolor]">$PARAM[focusedtexture]</texture>
          <visible>Control.IsVisible($PARAM[buttonid]) + Control.HasFocus($PARAM[buttonid])</visible>
        </control>
      </control>
    </definition>
  </include>

<include name="ButtonGroup">
  <param name="id" default=""/>
  <param name="left" default="1680"/>
  <param name="top" default="960"/>
  <param name="width" default="240"/>
  <param name="height" default="120"/>
  <param name="button1id" default=""/>
  <param name="button1unfocusedtexture" default=""/>
  <param name="button1focusedtexture" default=""/>
  <param name="button2id" default=""/>
  <param name="button2unfocusedtexture" default=""/>
  <param name="button2focusedtexture" default=""/>
  <definition>
    <control type="grouplist" id="$PARAM[id]">
      <visible allowhiddenfocus="true">false</visible>
      <width>$PARAM[width]</width>
      <height>$PARAM[height]</height>
      <itemgap>0</itemgap>
      <onleft>0</onleft>
      <onright>0</onright>
      <onup>noop</onup>
      <ondown>noop</ondown>
      <orientation>horizontal</orientation>
      <control type="button" id="$PARAM[button1id]"/>
      <control type="button" id="$PARAM[button2id]"/>
    </control>
    <control type="grouplist">
      <left>$PARAM[left]</left>
      <top>$PARAM[top]</top>
      <width>$PARAM[width]</width>
      <height>$PARAM[height]</height>
      <itemgap>0</itemgap>
			<align>right</align>
			<orientation>horizontal</orientation>
      <include content="ButtonLayout">
        <param name="buttonid" value="$PARAM[button1id]"/>
        <param name="unfocusedtexture" value="$PARAM[button1unfocusedtexture]"/>
        <param name="focusedtexture" value="$PARAM[button1focusedtexture]"/>
      </include>
      <include content="ButtonLayout">
        <param name="buttonid" value="$PARAM[button2id]"/>
        <param name="unfocusedtexture" value="$PARAM[button2unfocusedtexture]"/>
        <param name="focusedtexture" value="$PARAM[button2focusedtexture]"/>
      </include>
    </control>
  </definition>
</include>

	<!--ListIcon-->
	<include name="ListIcon">
    <param name="left" default="0"/>
		<param name="top" default="0"/>
		<param name="width" default="100%"/>
		<param name="height" default="100%"/>
    <param name="visible" default="true"/>
    <param name="animationtype" default=""/>
    <param name="animationeffect" default=""/>
    <param name="animationend" default=""/>
    <param name="animationcondition" default="false"/>
    <param name="aspectratio" default="scale"/>
		<param name="texture" default="$VAR[Thumbnail(0)Content]"/>
    <param name="fadetime" default="0"/>
    <param name="showgradient" default="false"/>
    <param name="bordervisible" default="false"/>
		<definition>
      <control type="group">
        <left>$PARAM[left]</left>
        <top>$PARAM[top]</top>
        <width>$PARAM[width]</width>
        <height>$PARAM[height]</height>
        <visible>$PARAM[visible]</visible>
        <animation effect="$PARAM[animationeffect]" end="$PARAM[animationend]" condition="$PARAM[animationcondition]" time="380" tween="sine" easing="inout" reversible="false">$PARAM[animationtype]</animation>
        <control type="image">
				  <aspectratio align="center">$PARAM[aspectratio]</aspectratio>
				  <texture background="true">$PARAM[texture]</texture>
          <texture background="true" colordiffuse="$VAR[AccentColor]">views/white_100.png</texture>
          <fadetime>$PARAM[fadetime]</fadetime>
			  </control>
        <!--Progress Bar backing overlay-->
        <control type="image">
          <visible>$EXP[Video_Containers]</visible>
          <visible>$PARAM[showgradient]</visible>
          <aspectratio>stretch</aspectratio>
          <texture colordiffuse="$VAR[DarkColor]">views/gradient_art-overlay.png</texture>
        </control>
        <control type="image">
          <visible>$PARAM[bordervisible]</visible>
          <aspectratio>stretch</aspectratio>
          <texture border="2" colordiffuse="$VAR[PrimaryColor]">views/border_1px_15.png</texture>
        </control>
       </control>
		</definition>
	</include>

  <!--Dropshadow-->
  <include name="DropShadow">
    <param name="left" default="0"/>
    <param name="top" default="0"/>
    <param name="width" default="120"/>
    <param name="height" default="120"/>
    <param name="flipx" default="false"/>
    <param name="flipy" default="false"/>
    <param name="texture" default="views/dropshadow_left_120.png"/>
    <param name="visible" default="true"/>
    <param name="animationtype" default=""/>
    <param name="animationcondition" default="false"/>
    <param name="animationeffect" default=""/>
    <param name="animationend" default=""/>
    <param name="animationtime" default="380"/>
    <param name="animation2effect" default=""/>
    <param name="animation2start" default=""/>
    <param name="animation2end" default=""/>
    <param name="animation2time" default=""/>
    <param name="animation2delay" default=""/>
    <param name="animation2center" default=""/>
    <param name="animation3effect" default=""/>
    <param name="animation3start" default=""/>
    <param name="animation3end" default=""/>
    <param name="animation3time" default=""/>
    <param name="animation3delay" default=""/>
    <definition>
      <control type="image">
        <left>$PARAM[left]</left>
        <top>$PARAM[top]</top>
        <width>$PARAM[width]</width>
        <height>$PARAM[height]</height>
        <texture colordiffuse="$VAR[ShadowColor]" flipx="$PARAM[flipx]" flipy="$PARAM[flipy]">$PARAM[texture]</texture>
        <visible>$PARAM[visible]</visible>
        <animation type="$PARAM[animationtype]" condition="$PARAM[animationcondition]" reversible="false">
          <effect type="$PARAM[animationeffect]" end="$PARAM[animationend]" time="$PARAM[animationtime]" tween="sine" easing="inout"/>
          <effect type="$PARAM[animation2effect]" start="$PARAM[animation2start]" end="$PARAM[animation2end]" center="$PARAM[animation2center]" time="$PARAM[animation2time]" delay="$PARAM[animation2delay]" tween="sine" easing="inout"/>
          <effect type="$PARAM[animation3effect]" start="$PARAM[animation3start]" end="$PARAM[animation3end]" time="$PARAM[animation3time]" delay="$PARAM[animation3delay]" tween="sine" easing="inout"/>
        </animation>
      </control>
    </definition>
  </include>

  <!--HiddenFocusButton-->
  <include name="HiddenFocusButton">
    <control type="button">
      <visible allowhiddenfocus="true">false</visible>
      <animation effect="slide" end="0,0" time="380" reversible="false">Focus</animation>
      <onfocus condition="System.HasAddon(script.embuary.helper) + !String.IsEmpty(ListItem.Property(WatchedEpisodes)) + !String.IsEmpty(ListItem.Property(TotalEpisodes)) + !String.IsEqual(ListItem.Overlay,OverlayWatched.png) + [Container.Content(tvshows) | Container.Content(seasons)]">RunScript(script.embuary.helper,action=calc,do='"($INFO[ListItem.Property(WatchedEpisodes)] / $INFO[ListItem.Property(TotalEpisodes)]) * 100"',prop=MyResult)</onfocus>
      <onfocus condition="System.HasAddon(script.embuary.helper) + !String.IsEmpty(Container.TotalWatched) + !String.IsEmpty(Container.NumItems) + [Control.IsVisible(500) + Container.Content(episodes) + !Skin.String(DetailedListView_Display,Square)]">RunScript(script.embuary.helper,action=calc,do='"($INFO[Container.TotalWatched] / $INFO[Container.NumItems]) * 100"',prop=MyResult)</onfocus>
      <onunfocus condition="!String.IsEmpty(Window(Home).Property(MyResult))">ClearProperty(MyResult,home)</onunfocus>
    </control>
  </include>

	<!--Progress bar-->
	<include name="ProgressBar">
		<param name="visible" default="!Control.HasFocus(60)"/>
		<param name="left" default="780"/>
		<param name="top" default="1047"/>
    <param name="bottom"/>
		<param name="width" default="360"/>
		<param name="height" default="6"/>
		<param name="backgroundcolor" default="$VAR[ProgressBarBackgroundColor]"/>
		<param name="backgoundtexture" default="views/white_10.png"/>
		<param name="focuscolor" default="$VAR[ProgressBarFocusColor]"/>
		<param name="focustexture" default="views/white_100.png"/>
		<definition>
			<control type="group">
        <visible>$EXP[Video_Containers]</visible>
				<visible>!$EXP[DialogVisible]</visible>
				<visible>$PARAM[visible]</visible>
				<left>$PARAM[left]</left>
				<top>$PARAM[top]</top>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<!--Video is resumable-->
				<control type="progress">
					<visible>ListItem.IsResumable + ![Control.IsVisible(500) + Container.Content(episodes) + !Skin.String(DetailedListView_Display,Square)]</visible>
					<width>$PARAM[width]</width>
					<height>$PARAM[height]</height>
					<texturebg colordiffuse="$PARAM[backgroundcolor]">$PARAM[backgoundtexture]</texturebg>
					<lefttexture></lefttexture>
					<midtexture colordiffuse="$PARAM[focuscolor]">$PARAM[focustexture]</midtexture>
					<righttexture></righttexture>
					<overlaytexture></overlaytexture>
					<info>ListItem.PercentPlayed</info>
				</control>
				<!--Video watched / Album Underline-->
				<control type="image">
					<width>$PARAM[width]</width>
					<height>$PARAM[height]</height>
					<visible>Container.Content(albums) | !ListItem.IsResumable + String.IsEqual(ListItem.Overlay,OverlayWatched.png) + ![Control.IsVisible(500) + Container.Content(episodes) + !Skin.String(DetailedListView_Display,Square)]</visible>
					<texture colordiffuse="$PARAM[focuscolor]">$PARAM[focustexture]</texture>
				</control>
        <!--Sets, TVshows and Episodes-->
        <control type="group">
          <visible>!String.IsEqual(ListItem.Overlay,OverlayWatched.png) + Integer.IsGreater($NUMBER[Window(home).Property(MyResult)],0) + [Container.Content(tvshows) | Container.Content(seasons) | [Control.IsVisible(500) + Container.Content(episodes) + !Skin.String(DetailedListView_Display,Square)]]</visible>
          <!--Background-->
          <control type="image">
  					<width>$PARAM[width]</width>
  					<height>$PARAM[height]</height>
  					<texture colordiffuse="$PARAM[backgroundcolor]">$PARAM[backgoundtexture]</texture>
  				</control>
          <!--Focus-->
          <control type="image">
            <animation effect="zoom" end="5,100" time="0" condition="Integer.IsGreater($NUMBER[Window(home).Property(MyResult)],0) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(MyResult)],5)">Conditional</animation>
            <animation effect="zoom" end="10,100" time="0" condition="Integer.IsGreater($NUMBER[Window(home).Property(MyResult)],5) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(MyResult)],10)">Conditional</animation>
            <animation effect="zoom" end="15,100" time="0" condition="Integer.IsGreater($NUMBER[Window(home).Property(MyResult)],10) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(MyResult)],15)">Conditional</animation>
            <animation effect="zoom" end="20,100" time="0" condition="Integer.IsGreater($NUMBER[Window(home).Property(MyResult)],15) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(MyResult)],20)">Conditional</animation>
            <animation effect="zoom" end="25,100" time="0" condition="Integer.IsGreater($NUMBER[Window(home).Property(MyResult)],20) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(MyResult)],25)">Conditional</animation>
            <animation effect="zoom" end="30,100" time="0" condition="Integer.IsGreater($NUMBER[Window(home).Property(MyResult)],25) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(MyResult)],30)">Conditional</animation>
            <animation effect="zoom" end="35,100" time="0" condition="Integer.IsGreater($NUMBER[Window(home).Property(MyResult)],30) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(MyResult)],35)">Conditional</animation>
            <animation effect="zoom" end="40,100" time="0" condition="Integer.IsGreater($NUMBER[Window(home).Property(MyResult)],35) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(MyResult)],40)">Conditional</animation>
            <animation effect="zoom" end="45,100" time="0" condition="Integer.IsGreater($NUMBER[Window(home).Property(MyResult)],40) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(MyResult)],45)">Conditional</animation>
            <animation effect="zoom" end="50,100" time="0" condition="Integer.IsGreater($NUMBER[Window(home).Property(MyResult)],45) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(MyResult)],50)">Conditional</animation>
            <animation effect="zoom" end="55,100" time="0" condition="Integer.IsGreater($NUMBER[Window(home).Property(MyResult)],50) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(MyResult)],55)">Conditional</animation>
            <animation effect="zoom" end="60,100" time="0" condition="Integer.IsGreater($NUMBER[Window(home).Property(MyResult)],55) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(MyResult)],60)">Conditional</animation>
            <animation effect="zoom" end="65,100" time="0" condition="Integer.IsGreater($NUMBER[Window(home).Property(MyResult)],60) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(MyResult)],65)">Conditional</animation>
            <animation effect="zoom" end="70,100" time="0" condition="Integer.IsGreater($NUMBER[Window(home).Property(MyResult)],65) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(MyResult)],70)">Conditional</animation>
            <animation effect="zoom" end="75,100" time="0" condition="Integer.IsGreater($NUMBER[Window(home).Property(MyResult)],70) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(MyResult)],75)">Conditional</animation>
            <animation effect="zoom" end="80,100" time="0" condition="Integer.IsGreater($NUMBER[Window(home).Property(MyResult)],75) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(MyResult)],80)">Conditional</animation>
            <animation effect="zoom" end="85,100" time="0" condition="Integer.IsGreater($NUMBER[Window(home).Property(MyResult)],80) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(MyResult)],85)">Conditional</animation>
            <animation effect="zoom" end="90,100" time="0" condition="Integer.IsGreater($NUMBER[Window(home).Property(MyResult)],85) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(MyResult)],90)">Conditional</animation>
            <animation effect="zoom" end="95,100" time="0" condition="Integer.IsGreater($NUMBER[Window(home).Property(MyResult)],90) + Integer.IsLessOrEqual($NUMBER[Window(home).Property(MyResult)],95)">Conditional</animation>
            <animation effect="zoom" end="97.5,100" time="0" condition="Integer.IsGreater($NUMBER[Window(home).Property(MyResult)],95) + Integer.IsLess($NUMBER[Window(home).Property(MyResult)],100)">Conditional</animation>
  					<width>$PARAM[width]</width>
  					<height>$PARAM[height]</height>
  					<texture colordiffuse="$PARAM[focuscolor]">$PARAM[focustexture]</texture>
  				</control>
        </control>
			</control>
		</definition>
	</include>

	<!--Media Flags-->
	<include name="MediaFlags">
		<param name="groupvisible" default="[$EXP[ListView_Flags_IsOn] | $EXP[BillboardView_Flags_IsOn] | $EXP[ShowcaseView_Flags_IsOn] | $EXP[StripView_Flags_IsOn]] + !Control.HasFocus(60)"/>
		<definition>
			<control type="group">
        <visible>$EXP[Flag_Containers]</visible>
				<visible>!$EXP[DialogVisible]</visible>
				<visible>$PARAM[groupvisible]</visible>
				<control type="group">
					<!--Studio-->
					<control type="image" id="914">
						<visible>$EXP[ListView_Flags_Studio_IsVisible] | $EXP[BillboardView_Flags_Studio_IsVisible] | $EXP[ShowcaseView_Flags_Studio_IsVisible] | $EXP[StripView_Flags_Studio_IsVisible]</visible>
						<left>1605</left>
						<top>960</top>
						<width>90</width>
						<height>60</height>
						<aspectratio>keep</aspectratio>
						<texture colordiffuse="$VAR[FlagColor]" fallback="flags/blank.png">$VAR[Studio_Name]</texture>
						<animation effect="slide" start="0,0" end="180,0" time="0" condition="[$EXP[ListView_IsVisible] + $EXP[ListView_Flags_Studio_Shift]] | [$EXP[BillboardView_IsVisible] + $EXP[BillboardView_Flags_Studio_Shift]] | [$EXP[ShowcaseView_IsVisible] + $EXP[ShowcaseView_Flags_Studio_Shift]] | [$EXP[StripView_IsVisible] + $EXP[StripView_Flags_Studio_Shift]]">Conditional</animation>
					</control>
					<!--MPAA flag-->
					<control type="image" id="915">
						<visible>$EXP[ListView_Flags_Rating_IsVisible] | $EXP[BillboardView_Flags_Rating_IsVisible] | $EXP[ShowcaseView_Flags_Rating_IsVisible] | $EXP[StripView_Flags_Rating_IsVisible]</visible>
						<left>1785</left>
						<top>960</top>
						<width>90</width>
						<height>60</height>
						<aspectratio>keep</aspectratio>
						<texture colordiffuse="$VAR[FlagColor]" fallback="flags/blank.png">$VAR[MPAA_Certificate]</texture>
					</control>
				</control>
			</control>
		</definition>
	</include>

  <!--ListView Layout-->
  <include name="ListViewLayout">
    <param name="checkleft" default="30"/>
    <param name="checktop" default="0"/>
    <param name="checkwidth" default="60"/>
    <param name="checkheight" default="60"/>
    <param name="checktexture" default="views/check_unfocused.png"/>
    <param name="labelleft" default="120"/>
    <param name="labelmaxwidth" default="720"/>
    <param name="font" default="List_Title_Unfocused"/>
    <param name="textcolor" default="$VAR[ListUnfocusColor]"/>
    <param name="scroll" default="false"/>
    <definition>
      <control type="group">
        <visible>!$EXP[DialogVisible]</visible>
        <control type="image">
          <left>$PARAM[checkleft]</left>
          <top>$PARAM[checktop]</top>
          <width>$PARAM[checkwidth]</width>
          <height>$PARAM[checkheight]</height>
          <texture colordiffuse="$PARAM[textcolor]">$PARAM[checktexture]</texture>
          <visible>String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
        </control>
        <control type="label">
          <left>$PARAM[labelleft]</left>
          <width max="$PARAM[labelmaxwidth]">auto</width>
          <height>100%</height>
          <aligny>center</aligny>
          <font>$PARAM[font]</font>
          <textcolor>$PARAM[textcolor]</textcolor>
          <label>$VAR[Title]</label>
          <scroll>$PARAM[scroll]</scroll>
          <scrollsuffix> / </scrollsuffix>
        </control>
      </control>
    </definition>
  </include>

  <!--DetailedListView Layout-->
  <include name="DetailedListViewLayout">
    <param name="width" default="1440"/>
    <param name="height" default="180"/>
    <param name="unfocusedvisible" default="true"/>
    <param name="focusedvisible" default="false"/>
    <param name="backingwidth" default="1200"/>
    <param name="backingcolor" default="$VAR[DetailedListBackingColor]"/>
    <param name="titlelabeltype" default="label"/>
    <param name="titleleft" default="560"/>
    <param name="titletop" default="49"/>
    <param name="titlewidth" default="760"/>
    <param name="titleheight" default="44"/>
    <param name="titlefont" default="DetailedList_Title_Unfocused"/>
    <param name="titlescroll" default="false"/>
    <param name="titletextcolor" default="$VAR[IconDetailsTextColor]"/>
    <param name="subtitletop" default="98"/>
    <param name="subtitleheight" default="32"/>
    <param name="subtitlefont" default="DetailedList_Info_Unfocused"/>
    <param name="fanartvisible" default="true"/>
    <definition>
      <control type="group">
        <control type="group">
          <height>$PARAM[height]</height>
          <width>$PARAM[width]</width>
          <visible>!$EXP[DialogVisible]</visible>
          <include>ContentFadeAnimation</include>
          <!--Unfocused-Watched-->
          <control type="image">
            <visible>$PARAM[unfocusedvisible]</visible>
            <visible>String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
            <left>60</left>
            <top>60</top>
            <width>60</width>
            <height>60</height>
            <aspectratio>keep</aspectratio>
            <texture colordiffuse="$VAR[PrimaryColor]">views/check_unfocused.png</texture>
          </control>
          <!--Focused-Unwatched/Watched-->
          <control type="group">
            <visible>$PARAM[focusedvisible]</visible>
            <control type="image">
              <height>$PARAM[height]</height>
              <width>$PARAM[height]</width>
              <texture colordiffuse="$PARAM[backingcolor]">views/white_100.png</texture>
            </control>
            <control type="image">
              <visible>String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
              <left>60</left>
              <top>60</top>
              <width>60</width>
              <height>60</height>
              <aspectratio>keep</aspectratio>
              <texture colordiffuse="$VAR[SecondaryColor]">views/check_focused.png</texture>
            </control>
          </control>
          <!--Backing-->
          <control type="image">
            <left>$PARAM[height]</left>
            <width>$PARAM[backingwidth]</width>
            <height>$PARAM[height]</height>
            <texture colordiffuse="$PARAM[backingcolor]">views/white_100.png</texture>
          </control>
          <!--Title -->
          <control type="group">
            <visible>!String.IsEmpty(ListItem.Art(Thumb))</visible>
            <control type="$PARAM[titlelabeltype]">
              <animation effect="slide" end="0,19" time="0" condition="Skin.String(DetailedListView_Details,Title) | ListItem.IsCollection">Conditional</animation>
              <left>$PARAM[titleleft]</left>
              <top>$PARAM[titletop]</top>
              <width>$PARAM[titlewidth]</width>
              <height>$PARAM[titleheight]</height>
              <label>$VAR[Title]</label>
              <font>$PARAM[titlefont]</font>
              <aligny>center</aligny>
              <textcolor>$PARAM[titletextcolor]</textcolor>
              <scroll>$PARAM[scroll]</scroll>
              <scrollsuffix> / </scrollsuffix>
            </control>
            <!--SubTitle-->
            <control type="$PARAM[titlelabeltype]">
              <visible>!ListItem.IsCollection + !Skin.String(DetailedListView_Details,Title)</visible>
              <left>$PARAM[titleleft]</left>
              <top>$PARAM[subtitletop]</top>
              <width>$PARAM[titlewidth]</width>
              <height>$PARAM[subtitleheight]</height>
              <aligny>center</aligny>
              <label>$VAR[TitleInfo]</label>
              <font>$PARAM[subtitlefont]</font>
              <textcolor>$PARAM[titletextcolor]</textcolor>
              <scroll>$PARAM[scroll]</scroll>
              <scrollsuffix> / </scrollsuffix>
            </control>
          </control>
          <!--Title for folders-->
          <control type="$PARAM[titlelabeltype]">
            <visible>String.IsEmpty(ListItem.Art(Thumb))</visible>
            <left>169</left>
            <top>46</top>
            <width>$PARAM[titlewidth]</width>
            <height>$PARAM[titleheight]</height>
            <label>$VAR[Title]</label>
            <font>$PARAM[titlefont]</font>
            <aligny>center</aligny>
            <textcolor>$PARAM[titletextcolor]</textcolor>
            <scroll>$PARAM[scroll]</scroll>
            <scrollsuffix> / </scrollsuffix>
          </control>
        </control>
        <!--Fanart-->
        <control type="group">
          <visible>$PARAM[fanartvisible]</visible>
          <left>$PARAM[height]</left>
          <width>320</width>
          <height>$PARAM[height]</height>
          <visible>!String.IsEmpty(ListItem.Art(Thumb))</visible>
          <include content="ListIcon"/>
          <control type="image">
            <visible>$PARAM[unfocusedvisible]</visible>
            <texture colordiffuse="$VAR[SecondaryColor]">views/white_30.png</texture>
          </control>
        </control>
      </control>
    </definition>
  </include>

	<!--Grid View Layout-->
	<include name="GridViewLayout">
    <!--Group attributes-->
    <param name="left" default="72"/>
    <param name="top" default="0"/>
    <param name="width" default="592"/>
    <param name="height" default="333"/>
    <!--Dropshadow-->
    <param name="dropshadowvisible" default="false"/>
    <param name="dropshadowrightsidevisibility" default="!Container.Column(2)"/>
    <param name="dropshadowbottomsidevisibility" default="!String.IsEmpty(Control.GetLabel(962))"/>
    <param name="dropshadowbottomrightcornervisibility" default="!String.IsEmpty(Control.GetLabel(963))"/>
    <param name="dropshadowbottomleftcornervisibility" default="!String.IsEmpty(Control.GetLabel(961))"/>
    <!--ListIcon attributes-->
    <param name="aspectratio" default="keep"/>
    <param name="watchedstatusvisibility" default="true"/>
    <param name="showgradient" default="false"/>
    <!--Border attributes-->
    <param name="bordervisible" default="false"/>
    <param name="borderleft" default="-10"/>
    <param name="bordertop" default="-10"/>
    <param name="borderwidth" default="612"/>
    <param name="borderheight" default="353"/>
		<!--ProgressBar attributes-->
    <param name="progressbarvisible" default="false"/>
    <param name="fadecondition" default="false"/>
    <param name="progressbarleft" default="116"/>
    <param name="progressbartop" default="312"/>
    <param name="progressbarwidth" default="360"/>
		<!--GridTitle attributes-->
		<param name="gridtitlescroll" default="false"/>
		<param name="gridtitletop" default="363"/>
    <param name="gridtitleheight" default="36"/>
		<param name="gridtitlefont" default="Grid_Title_Unfocused"/>
		<param name="gridtitletextcolor" default="$VAR[TertiaryColor]"/>
		<!--Info attributes-->
    <param name="griddetailsvisible" default="false"/>
		<param name="griddetailstop" default="407"/>
		<definition>
      <control type="group">
        <left>$PARAM[left]</left>
        <top>$PARAM[top]</top>
        <width>$PARAM[width]</width>
        <height>$PARAM[height]</height>
        <!--Dropshadow-->
        <control type="group">
          <visible>!$EXP[DialogVisible]</visible>
          <visible>$PARAM[dropshadowvisible]</visible>
          <include>ContentFadeAnimation</include>
          <!--Left Side-->
          <include content="DropShadow">
            <param name="left" value="-120"/>
            <param name="top" value="0"/>
            <param name="width" value="120"/>
            <param name="height" value="$PARAM[height]"/>
            <param name="visible" value="!Container.Column(0)"/>
          </include>
          <!--Top Left Corner-->
          <include content="DropShadow">
            <param name="left" value="-120"/>
            <param name="top" value="-120"/>
            <param name="width" value="120"/>
            <param name="height" value="120"/>
            <param name="texture" value="views/dropshadow_topleftcorner_120.png"/>
            <param name="visible" value="$EXP[GridView_Details_Disabled] + !Container.Column(0)"/>
          </include>
          <!--Top Side-->
          <include content="DropShadow">
            <param name="left" value="0"/>
            <param name="top" value="-120"/>
            <param name="width" value="$PARAM[width]"/>
            <param name="height" value="120"/>
            <param name="texture" value="views/dropshadow_top_120.png"/>
            <param name="visible" value="$EXP[GridView_Details_Disabled]"/>
          </include>
          <!--Top Right Corner-->
          <include content="DropShadow">
            <param name="left" value="$PARAM[width]"/>
            <param name="top" value="-120"/>
            <param name="width" value="120"/>
            <param name="height" value="120"/>
            <param name="flipx" value="true"/>
            <param name="texture" value="views/dropshadow_topleftcorner_120.png"/>
            <param name="visible" value="$EXP[GridView_Details_Disabled] + $PARAM[dropshadowrightsidevisibility] + !String.IsEmpty(Control.GetLabel(960))"/>
          </include>
          <!--Rigt Side-->
          <include content="DropShadow">
            <param name="left" value="$PARAM[width]"/>
            <param name="top" value="0"/>
            <param name="width" value="120"/>
            <param name="height" value="$PARAM[height]"/>
            <param name="flipx" value="true"/>
            <param name="texture" value="views/dropshadow_left_120.png"/>
            <param name="visible" value="$PARAM[dropshadowrightsidevisibility] + !String.IsEmpty(Control.GetLabel(960))"/>
          </include>
          <!--Bottom Right Corner-->
          <include content="DropShadow">
            <param name="left" value="$PARAM[width]"/>
            <param name="top" value="$PARAM[height]"/>
            <param name="width" value="120"/>
            <param name="height" value="120"/>
            <param name="flipx" value="true"/>
            <param name="flipy" value="true"/>
            <param name="texture" value="views/dropshadow_topleftcorner_120.png"/>
            <param name="visible" value="$EXP[GridView_Details_Disabled] + $PARAM[dropshadowrightsidevisibility] + !String.IsEmpty(Control.GetLabel(960)) + $PARAM[dropshadowbottomsidevisibility] + $PARAM[dropshadowbottomrightcornervisibility]"/>
          </include>
          <!--Bottom Side-->
          <include content="DropShadow">
            <param name="left" value="0"/>
            <param name="top" value="$PARAM[height]"/>
            <param name="width" value="$PARAM[width]"/>
            <param name="height" value="120"/>
            <param name="flipy" value="true"/>
            <param name="texture" value="views/dropshadow_top_120.png"/>
            <param name="visible" value="$EXP[GridView_Details_Disabled] + $PARAM[dropshadowbottomsidevisibility]"/>
          </include>
          <!--Bottom Left Corner-->
          <include content="DropShadow">
            <param name="left" value="-120"/>
            <param name="top" value="$PARAM[height]"/>
            <param name="width" value="120"/>
            <param name="height" value="120"/>
            <param name="flipy" value="true"/>
            <param name="texture" value="views/dropshadow_topleftcorner_120.png"/>
            <param name="visible" value="$EXP[GridView_Details_Disabled] + !Container.Column(0) + $PARAM[dropshadowbottomleftcornervisibility]"/>
          </include>
        </control>
        <!--ListIcon-->
        <include content="ListIcon">
          <param name="left" value="0"/>
          <param name="top" value="0"/>
          <param name="width" value="100%"/>
          <param name="showgradient" value="$PARAM[showgradient]"/>
          <param name="aspectratio" value="$PARAM[aspectratio]"/>
        </include>
        <!--Watched overlay-->
        <control type="image">
          <left>0</left>
          <top>0</top>
          <width>100%</width>
          <height>100%</height>
          <visible>$PARAM[watchedstatusvisibility]</visible>
          <visible>String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
          <texture colordiffuse="$VAR[SecondaryColor]">views/white_50.png</texture>
        </control>
        <!--ProgressBar-->
        <control type="group">
          <left>$PARAM[progressbarleft]</left>
          <top>$PARAM[progressbartop]</top>
          <width>$PARAM[progressbarwidth]</width>
          <visible>$PARAM[progressbarvisible]</visible>
          <include>ContentFadeAnimation</include>
          <animation effect="fade" start="0" end="100" time="380" delay="760" tween="sine" easing="out" condition="$PARAM[fadecondition]" reversible="false">Focus</animation>
          <include content="ProgressBar">
            <param name="left" value="0"/>
            <param name="top" value="0"/>
            <param name="width" value="100%"/>
          </include>
        </control>
        <!--Border-->
        <control type="group">
          <visible>!$EXP[DialogVisible]</visible>
          <include>ContentFadeAnimation</include>
          <control type="image">
            <left>$PARAM[borderleft]</left>
            <top>$PARAM[bordertop]</top>
            <width>$PARAM[borderwidth]</width>
            <height>$PARAM[borderheight]</height>
            <aspectratio>stretch</aspectratio>
            <visible>$PARAM[bordervisible]</visible>
            <texture border="11" colordiffuse="$VAR[AccentColor]">views/border_10px.png</texture>
          </control>
        </control>
				<!--GridTitle-->
				<control type="label">
					<visible>!$EXP[DialogVisible]</visible>
					<include>ContentFadeAnimation</include>
					<visible>$EXP[GridView_Details_Enabled]</visible>
					<left>0</left>
					<width>$PARAM[width]</width>
					<top>$PARAM[gridtitletop]</top>
					<height>$PARAM[gridtitleheight]</height>
					<align>center</align>
					<font>$PARAM[gridtitlefont]</font>
					<textcolor>$PARAM[gridtitletextcolor]</textcolor>
					<label>$VAR[Title]</label>
					<scroll>$PARAM[gridtitlescroll]</scroll>
					<scrollsuffix> / </scrollsuffix>
				</control>
				<!--GridDetails-->
				<control type="label">
					<visible>!$EXP[DialogVisible]</visible>
					<include>ContentFadeAnimation</include>
					<visible>Skin.String(GridView_Details,TitleAndInfo)</visible>
          <visible>$PARAM[griddetailsvisible]</visible>
					<left>0</left>
					<width>$PARAM[width]</width>
					<top>$PARAM[griddetailstop]</top>
					<height>29</height>
					<align>center</align>
					<font>Grid_Info</font>
					<textcolor>$VAR[PrimaryColor]</textcolor>
					<label>$VAR[TitleInfo]</label>
					<scroll>$PARAM[gridtitlescroll]</scroll>
					<scrollsuffix> / </scrollsuffix>
				</control>
      </control>
	  </definition>
  </include>

	<include name="GridViewtItemLayout_Fanart">
    <include content="GridViewLayout"/>
	</include>

	<include name="GridViewFocusLayout_Fanart">
    <include content="GridViewLayout">
      <param name="dropshadowvisible" value="true"/>
      <param name="showgradient" value="true"/>
      <param name="watchedstatusvisibility" value="false"/>
      <param name="bordervisible" value="true"/>
      <param name="progressbarvisible" value="!Control.IsVisible(5001) + !Control.IsVisible(5002)"/>
      <param name="fadecondition" default="true"/>
      <param name="gridtitlescroll" value="true"/>
      <param name="gridtitletop" value="360"/>
      <param name="gridtitleheight" value="42"/>
      <param name="gridtitlefont" value="Grid_Title_Focused"/>
      <param name="gridtitletextcolor" value="$VAR[PrimaryColor]"/>
      <param name="griddetailsvisible" value="true"/>
    </include>
	</include>

	<include name="GridViewItemLayout_Posters">
		<include content="GridViewLayout">
      <param name="left" value="60"/>
      <param name="width" value="360"/>
      <param name="height" value="540"/>
      <param name="gridtitletop" value="570"/>
		</include>
	</include>

	<include name="GridViewFocusLayout_Posters">
		<include content="GridViewLayout">
      <param name="left" value="60"/>
      <param name="width" value="360"/>
      <param name="height" value="540"/>
      <param name="dropshadowvisible" value="true"/>
      <param name="dropshadowrightsidevisibility" value="!Container.Column(4)"/>
      <param name="dropshadowbottomsidevisibility" value="!String.IsEmpty(Control.GetLabel(964))"/>
      <param name="dropshadowbottomrightcornervisibility" value="!String.IsEmpty(Control.GetLabel(965))"/>
      <param name="dropshadowbottomleftcornervisibility" value="!String.IsEmpty(Control.GetLabel(963))"/>
      <param name="showgradient" value="true"/>
      <param name="watchedstatusvisibility" value="false"/>
      <param name="bordervisible" value="true"/>
      <param name="borderwidth" value="380"/>
      <param name="borderheight" value="560"/>
      <param name="progressbarvisible" value="true"/>
      <param name="fadecondition" value="true"/>
      <param name="progressbarleft" value="60"/>
      <param name="progressbartop" value="519"/>
      <param name="progressbarwidth" value="240"/>
      <param name="gridtitlescroll" value="true"/>
  		<param name="gridtitletop" value="567"/>
      <param name="gridtitleheight" value="42"/>
  		<param name="gridtitlefont" value="Grid_Title_Focused"/>
  		<param name="gridtitletextcolor" value="$VAR[PrimaryColor]"/>
      <param name="griddetailsvisible" value="true"/>
  		<param name="griddetailstop" value="614"/>
		</include>
	</include>

  <include name="GridViewItemLayout_Square">
    <include content="GridViewLayout">
      <param name="left" value="60"/>
      <param name="width" value="360"/>
      <param name="height" value="360"/>
      <param name="aspectratio" value="scale"/>
      <param name="gridtitletop" value="390"/>
    </include>
  </include>

  <include name="GridViewFocusLayout_Square">
    <include content="GridViewLayout">
      <param name="left" value="60"/>
      <param name="width" value="360"/>
      <param name="height" value="360"/>
      <param name="dropshadowvisible" value="true"/>
      <param name="dropshadowrightsidevisibility" value="!Container.Column(4)"/>
      <param name="dropshadowbottomsidevisibility" value="!String.IsEmpty(Control.GetLabel(964))"/>
      <param name="dropshadowbottomrightcornervisibility" value="!String.IsEmpty(Control.GetLabel(965))"/>
      <param name="dropshadowbottomleftcornervisibility" value="!String.IsEmpty(Control.GetLabel(963))"/>
      <param name="aspectratio" value="scale"/>
      <param name="showgradient" value="true"/>
      <param name="watchedstatusvisibility" value="false"/>
      <param name="bordervisible" value="true"/>
      <param name="borderwidth" value="380"/>
      <param name="borderheight" value="380"/>
      <param name="progressbarvisible" value="true"/>
      <param name="fadecondition" value="true"/>
      <param name="progressbarleft" value="60"/>
      <param name="progressbartop" value="339"/>
      <param name="progressbarwidth" value="240"/>
      <param name="gridtitlescroll" value="true"/>
      <param name="gridtitletop" value="387"/>
      <param name="gridtitleheight" value="42"/>
      <param name="gridtitlefont" value="Grid_Title_Focused"/>
      <param name="gridtitletextcolor" value="$VAR[PrimaryColor]"/>
      <param name="griddetailsvisible" value="true"/>
      <param name="griddetailstop" value="434"/>
    </include>
  </include>

	<!--Common View Details-->
	<include name="CommonViewDetails">
		<param name="groupvisibility" default="!Skin.String(ShowcaseView_Details,Off) + [Skin.String(ShowcaseView_Logo,Off) | String.IsEmpty(ListItem.Art(clearlogo))]"/>
		<param name="left" default="1140"/>
		<param name="bottom" default="180"/>
		<param name="width" default="720"/>
		<param name="height" default="720"/>
		<param name="align" default="center"/>
    <param name="itemgap" default="0"/>
		<param name="labeltype" default="textbox"/>
		<param name="titlevisibility" default="true"/>
		<param name="titleheight" default="180"/>
		<param name="titlefont" default="Showcase_Title"/>
    <param name="titlecolor" default="$VAR[PrimaryColor]"/>
		<param name="titlealign" default="left"/>
		<param name="logovisibility" default="false"/>
		<param name="infovisibility" default="$EXP[ShowcaseView_Details_Info_IsVisible]"/>
    <param name="titleinfogap" default="5"/>
    <param name="infoheight" default="35"/>
		<param name="infofont" default="Showcase_Info"/>
		<param name="plotvisibility" default="$EXP[ShowcaseView_Details_Plot_IsVisible]"/>
		<param name="plotmaxheight" default="240"/>
    <param name="infoplotgap" default="60"/>
		<param name="plotfont" default="Body"/>
    <param name="plotcolor" default="$VAR[TertiaryColor]"/>
		<definition>
			<control type="grouplist">
				<visible>!$EXP[DialogVisible]</visible>
        <visible>!Container.IsUpdating</visible>
				<visible>$PARAM[groupvisibility]</visible>
				<left>$PARAM[left]</left>
				<bottom>$PARAM[bottom]</bottom>
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<orientation>vertical</orientation>
				<align>$PARAM[align]</align>
				<itemgap>$PARAM[itemgap]</itemgap>
        <usecontrolcoords>true</usecontrolcoords>
				<!--Title-->
				<control type="$PARAM[labeltype]">
					<visible>$PARAM[titlevisibility]</visible>
					<height max="$PARAM[titleheight]">auto</height>
					<font>$PARAM[titlefont]</font>
					<textcolor>$PARAM[titlecolor]</textcolor>
					<label>$VAR[Title]</label>
					<align>$PARAM[titlealign]</align>
					<scroll>true</scroll>
					<scrollsuffix> / </scrollsuffix>
				</control>
				<!--Logo-->
				<control type="image">
					<visible>$PARAM[logovisibility]</visible>
					<width>560</width>
					<height>217</height>
					<aspectratio>keep</aspectratio>
					<texture background="true">$INFO[ListItem.Art(clearlogo)]</texture>
				</control>
				<!--Info-->
				<control type="$PARAM[labeltype]">
          <top>$PARAM[titleinfogap]</top>
          <visible>$PARAM[infovisibility]</visible>
					<visible>!String.IsEqual(Control.GetLabel(916),EMPTY)</visible>
          <height max="$PARAM[infoheight]">auto</height>
					<font>$PARAM[infofont]</font>
					<textcolor>$PARAM[titlecolor]</textcolor>
					<label>$VAR[TitleInfo]</label>
					<align>$PARAM[titlealign]</align>
					<scroll>true</scroll>
					<scrollsuffix> / </scrollsuffix>
				</control>
				<!--Plot-->
				<control type="textbox">
          <top>$PARAM[infoplotgap]</top>
					<height max="$PARAM[plotmaxheight]">auto</height>
          <visible>!String.IsEmpty(ListItem.Plot)</visible>
					<visible>$PARAM[plotvisibility]</visible>
					<font>$PARAM[plotfont]</font>
					<textcolor>$PARAM[plotcolor]</textcolor>
					<label>$VAR[Plot]</label>
					<align>$PARAM[titlealign]</align>
					<autoscroll delay="5000" time="1500" repeat="2000">true</autoscroll>
				</control>
			</control>
		</definition>
	</include>

  <!--HiddenGridButton-->
  <include name="HiddenGridFocusButton">
    <control type="button">
      <visible allowhiddenfocus="true">false</visible>
      <onfocus condition="[$EXP[GridView_Display_IsFanart] + Container.Position(2)] | [!$EXP[GridView_Display_IsFanart] + Container.Position(4)]">SetProperty(GridView_TopRightIcon,Focused,Home)</onfocus>
      <onunfocus condition="![[$EXP[GridView_Display_IsFanart] + Container.Position(2)] | [!$EXP[GridView_Display_IsFanart] + Container.Position(4)]]">ClearProperty(GridView_TopRightIcon,Home)</onunfocus>
    </control>
  </include>

  <!-- IconLayout -->
  <include name="IconLayout">
    <definition>
      <control type="group">
        <left>0</left>
        <top>0</top>
        <width>$PARAM[width]</width>
        <height>$PARAM[width]</height>
        <visible>$PARAM[visible]</visible>
        <!--Background-->
        <control type="image">
          <texture colordiffuse="$PARAM[backgroundcolor]">$PARAM[backgroundtexture]</texture>
        </control>
        <!-- Volume Progressbar -->
        <control type="progress" id="$PARAM[progressbarid]">
          <visible>$PARAM[progressbarvisible]</visible>
          <animation effect="rotate" center="$PARAM[rotatecenter]" end="90" time="0" condition="$PARAM[progressbarrotate]" reversible="false">Conditional</animation>
          <left>$PARAM[progressbarleft]</left>
          <top>$PARAM[progressbartop]</top>
          <width>$PARAM[progressbarwidth]</width>
          <height>$PARAM[progressbarheight]</height>
          <info>$PARAM[progressbarinfo]</info>
          <texturebg colordiffuse="$PARAM[progressbarbackgroundcolor]">$PARAM[progressbarbackgroundtexture]</texturebg>
          <lefttexture></lefttexture>
          <midtexture colordiffuse="$PARAM[progressbarfocuscolor]">$PARAM[progressbarfocustexture]</midtexture>
          <righttexture></righttexture>
          <overlaytexture></overlaytexture>
        </control>
        <!-- Icon Backing -->
        <control type="grouplist">
          <visible>$PARAM[iconbackingvisible]</visible>
          <align>center</align>
          <orientation>vertical</orientation>
          <control type="grouplist">
            <height>$PARAM[iconbackingheight]</height>
            <align>center</align>
            <orientation>horizontal</orientation>
            <control type="image">
              <width>$PARAM[iconbackingwidth]</width>
              <height>$PARAM[iconbackingheight]</height>
              <texture colordiffuse="$PARAM[iconbackingcolor]">$PARAM[iconbackingtexture]</texture>
            </control>
          </control>
        </control>
        <!-- Icon -->
        <control type="grouplist">
          <visible>$PARAM[iconvisible]</visible>
          <align>center</align>
          <orientation>vertical</orientation>
          <control type="grouplist">
            <height>$PARAM[iconheight]</height>
            <align>center</align>
            <orientation>horizontal</orientation>
            <control type="image">
              <width>$PARAM[iconwidth]</width>
              <height>$PARAM[iconheight]</height>
              <texture colordiffuse="$PARAM[iconcolor]">$PARAM[icontexture]</texture>
            </control>
          </control>
        </control>
      </control>
    </definition>
  </include>

  <!--Icon180x180-->
  <include name="Icon180">
    <param name="backgroundcolor" default="$VAR[DarkGreyColor]"/>
    <param name="backgroundtexture" default="views/white_100.png"/>
    <param name="progressbarvisible" default="!Player.Muted"/>
    <param name="progressbarid" default="50405"/>
    <param name="progressbarrotate" default="true"/>
    <param name="progressbarleft" default="30"/>
    <param name="progressbartop" default="75"/>
    <param name="progressbarwidth" default="120"/>
    <param name="progressbarheight" default="30"/>
    <param name="progressbarinfo" default="player.volume"/>
    <param name="progressbarbackgroundcolor" default="$VAR[LightColor]"/>
    <param name="progressbarbackgroundtexture" default="views/white_20.png"/>
    <param name="progressbarfocuscolor" default="$VAR[LightColor]"/>
    <param name="progressbarfocustexture" default="views/white_75.png"/>
    <param name="iconbackingvisible" default="Player.Muted"/>
    <param name="iconbackingwidth" default="30"/>
    <param name="iconbackingheight" default="120"/>
    <param name="iconbackingcolor" default="$VAR[LightColor]"/>
    <param name="iconbackingtexture" default="views/white_20.png"/>
    <param name="iconvisible" default="Player.Muted"/>
    <param name="iconwidth" default="60"/>
    <param name="iconheight" default="60"/>
    <param name="iconcolor" default="$VAR[AccentColor]"/>
    <param name="icontexture" default="views/cross-large_focused.png"/>
    <definition>
      <control type="group">
        <animation effect="slide" end="1560,0" time="0" condition="Window.IsActive(home)">Conditional</animation>
        <animation effect="slide" end="1740,0" time="0" condition="String.IsEqual(Container.ViewMode,List) | String.IsEqual(Container.ViewMode,Billboard)">Conditional</animation>
        <animation effect="slide" end="720,0" time="0" condition="String.IsEqual(Container.ViewMode,Showcase) + $EXP[ShowcaseView_Display_IsPosters]">Conditional</animation>
        <animation effect="slide" end="1080,0" time="0" condition="String.IsEqual(Container.ViewMode,Showcase) + $EXP[ShowcaseView_Display_IsSquare]">Conditional</animation>
        <animation effect="slide" end="1680,0" time="0" condition="String.IsEqual(Container.ViewMode,Grid) + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]]">Conditional</animation>
        <animation effect="slide" end="1668,0" time="0" condition="String.IsEqual(Container.ViewMode,Grid) + $EXP[GridView_Display_IsFanart]">Conditional</animation>
        <animation effect="slide" end="1740,0" time="0" condition="Window.IsActive(fullscreenvideo)">Conditional</animation>
        <include content="IconLayout">
          <param name="width" value="180"/>
          <param name="visible" value="$EXP[Icon_180_IsVisible]"/>
          <param name="backgroundcolor" value="$PARAM[backgroundcolor]"/>
          <param name="backgroundtexture" value="$PARAM[backgroundtexture]"/>
          <param name="progressbarid" value="$PARAM[progressbarid]"/>
          <param name="progressbarrotate" value="$PARAM[progressbarrotate]"/>
          <param name="rotatecenter" value="90,90"/>
          <param name="progressbarvisible" value="$PARAM[progressbarvisible]"/>
          <param name="progressbarleft" value="$PARAM[progressbarleft]"/>
          <param name="progressbartop" value="$PARAM[progressbartop]"/>
          <param name="progressbarwidth" value="$PARAM[progressbarwidth]"/>
          <param name="progressbarheight" value="$PARAM[progressbarheight]"/>
          <param name="progressbarinfo" value="$PARAM[progressbarinfo]"/>
          <param name="progressbarbackgroundcolor" value="$PARAM[progressbarbackgroundcolor]"/>
          <param name="progressbarbackgroundtexture" value="$PARAM[progressbarbackgroundtexture]"/>
          <param name="progressbarfocuscolor" value="$PARAM[progressbarfocuscolor]"/>
          <param name="progressbarfocustexture" value="$PARAM[progressbarfocustexture]"/>
          <param name="iconbackingvisible" value="$PARAM[iconbackingvisible]"/>
          <param name="iconbackingwidth" value="$PARAM[iconbackingwidth]"/>
          <param name="iconbackingheight" value="$PARAM[iconbackingheight]"/>
          <param name="iconbackingcolor" value="$PARAM[iconbackingcolor]"/>
          <param name="iconbackingtexture" value="$PARAM[iconbackingtexture]"/>
          <param name="iconvisible" value="$PARAM[iconvisible]"/>
          <param name="iconleft" value="$PARAM[iconleft]"/>
          <param name="icontop" value="$PARAM[icontop]"/>
          <param name="iconwidth" value="$PARAM[iconwidth]"/>
          <param name="iconheight" value="$PARAM[iconheight]"/>
          <param name="iconcolor" value="$PARAM[iconcolor]"/>
          <param name="icontexture" value="$PARAM[icontexture]"/>
        </include>
      </control>
    </definition>
  </include>

  <!--Icon240x240-->
  <include name="Icon240">
    <param name="backgroundcolor" default="$VAR[DarkGreyColor]"/>
    <param name="backgroundtexture" default="views/white_100.png"/>
    <param name="progressbarvisible" default="!Player.Muted"/>
    <param name="progressbarid" default="50404"/>
    <param name="progressbarrotate" default="true"/>
    <param name="progressbarleft" default="60"/>
    <param name="progressbartop" default="105"/>
    <param name="progressbarwidth" default="120"/>
    <param name="progressbarheight" default="30"/>
    <param name="progressbarinfo" default="player.volume"/>
    <param name="progressbarbackgroundcolor" default="$VAR[LightColor]"/>
    <param name="progressbarbackgroundtexture" default="views/white_20.png"/>
    <param name="progressbarfocuscolor" default="$VAR[LightColor]"/>
    <param name="progressbarfocustexture" default="views/white_75.png"/>
    <param name="iconbackingvisible" default="Player.Muted"/>
    <param name="iconbackingwidth" default="30"/>
    <param name="iconbackingheight" default="120"/>
    <param name="iconbackingcolor" default="$VAR[LightColor]"/>
    <param name="iconbackingtexture" default="views/white_20.png"/>
    <param name="iconvisible" default="Player.Muted"/>
    <param name="iconwidth" default="60"/>
    <param name="iconheight" default="60"/>
    <param name="iconcolor" default="$VAR[AccentColor]"/>
    <param name="icontexture" default="views/cross-large_focused.png"/>
    <definition>
      <control type="group">
        <animation effect="slide" end="1600,0" time="0" condition="String.IsEqual(Container.ViewMode,Strip) + $EXP[StripView_Display_IsPosters]">Conditional</animation>
        <animation effect="slide" end="1600,0" time="0" condition="String.IsEqual(Container.ViewMode,Strip) + $EXP[StripView_Display_IsFanart] + !Skin.String(StripView_Details,Off)">Conditional</animation>
        <animation effect="slide" end="1280,0" time="0" condition="String.IsEqual(Container.ViewMode,Strip) + $EXP[StripView_Display_IsFanart] + Skin.String(StripView_Details,Off)">Conditional</animation>
        <animation effect="slide" end="720,0" time="0" condition="String.IsEqual(Container.ViewMode,Strip) + $EXP[StripView_Display_IsSquare] + !Skin.String(StripView_Details,Off)">Conditional</animation>
        <animation effect="slide" end="645,0" time="0" condition="String.IsEqual(Container.ViewMode,Strip) + $EXP[StripView_Display_IsSquare] + Skin.String(StripView_Details,Off)">Conditional</animation>
        <include content="IconLayout">
          <param name="width" value="240"/>
          <param name="visible" value="$EXP[Icon_240_IsVisible]"/>
          <param name="backgroundcolor" value="$PARAM[backgroundcolor]"/>
          <param name="backgroundtexture" value="$PARAM[backgroundtexture]"/>
          <param name="progressbarid" value="$PARAM[progressbarid]"/>
          <param name="progressbarrotate" value="$PARAM[progressbarrotate]"/>
          <param name="rotatecenter" value="120,120"/>
          <param name="progressbarvisible" value="$PARAM[progressbarvisible]"/>
          <param name="progressbarleft" value="$PARAM[progressbarleft]"/>
          <param name="progressbartop" value="$PARAM[progressbartop]"/>
          <param name="progressbarwidth" value="$PARAM[progressbarwidth]"/>
          <param name="progressbarheight" value="$PARAM[progressbarheight]"/>
          <param name="progressbarinfo" value="$PARAM[progressbarinfo]"/>
          <param name="progressbarbackgroundcolor" value="$PARAM[progressbarbackgroundcolor]"/>
          <param name="progressbarbackgroundtexture" value="$PARAM[progressbarbackgroundtexture]"/>
          <param name="progressbarfocuscolor" value="$PARAM[progressbarfocuscolor]"/>
          <param name="progressbarfocustexture" value="$PARAM[progressbarfocustexture]"/>
          <param name="iconbackingvisible" value="$PARAM[iconbackingvisible]"/>
          <param name="iconbackingwidth" value="$PARAM[iconbackingwidth]"/>
          <param name="iconbackingheight" value="$PARAM[iconbackingheight]"/>
          <param name="iconbackingcolor" value="$PARAM[iconbackingcolor]"/>
          <param name="iconbackingtexture" value="$PARAM[iconbackingtexture]"/>
          <param name="iconvisible" value="$PARAM[iconvisible]"/>
          <param name="iconleft" value="$PARAM[iconleft]"/>
          <param name="icontop" value="$PARAM[icontop]"/>
          <param name="iconwidth" value="$PARAM[iconwidth]"/>
          <param name="iconheight" value="$PARAM[iconheight]"/>
          <param name="iconcolor" value="$PARAM[iconcolor]"/>
          <param name="icontexture" value="$PARAM[icontexture]"/>
        </include>
      </control>
    </definition>
  </include>

  <!--Icon details layout-->
  <include name="IconDetailsLayout">
    <param name="visible" default="false"/>
    <param name="left" default="0"/>
    <param name="top" default="0"/>
    <param name="width" default="100%"/>
    <param name="height" default="180"/>
    <param name="progressbarvisible" default="false"/>
    <param name="progressbarid" default=""/>
    <param name="progressbarinfo" default=""/>
    <param name="progressbarwidth" default="100%"/>
    <param name="progressbaralign" default="right"/>
    <param name="progressbarbackgroundcolor" default="$VAR[IconDetailsProgressBarBackgroundColor]"/>
    <param name="progressbarbackgroundtexture" default="views/white_100.png"/>
    <param name="progressbarfocuscolor" default="$VAR[IconDetailsProgressBarFocusColor]"/>
    <param name="progressbarfocustexture" default="views/white_100.png"/>
    <param name="titleid" default=""/>
    <param name="infoid" default=""/>
    <param name="textalign" default="right"/>
    <param name="titlelabel" default=""/>
    <param name="infolabel" default=""/>
    <param name="textcolor" default="$VAR[IconDetailsTextColor]"/>
    <definition>
      <control type="group">
        <visible>$PARAM[visible]</visible>
        <left>$PARAM[left]</left>
        <top>$PARAM[top]</top>
        <width>$PARAM[width]</width>
        <height>$PARAM[height]</height>
        <!-- Progressbar
        <control type="grouplist">
          <visible>$PARAM[progressbarvisible]</visible>
          <width>100%</width>
          <orientation>horizontal</orientation>
          <align>%PARAM[progressbaralign]</align>
          <control type="progress" id="$PARAM[progressbarid]">
            <width>$PARAM[progressbarwidth]</width>
            <height>8</height>
            <info>$PARAM[progressbarinfo]</info>
            <texturebg colordiffuse="$PARAM[progressbarbackgroundcolor]">$PARAM[progressbarbackgroundtexture]</texturebg>
            <lefttexture></lefttexture>
            <midtexture colordiffuse="$PARAM[progressbarfocuscolor]">$PARAM[progressbarfocustexture]</midtexture>
            <righttexture></righttexture>
            <overlaytexture></overlaytexture>
          </control>
        </control>
        <!--Progressbar-->
        <control type="group">
          <visible>$PARAM[progressbarvisible]</visible>
          <!--Background-->
          <control type="image">
            <width>$PARAM[width]</width>
            <height>8</height>
            <texture colordiffuse="$PARAM[progressbarbackgroundcolor]">$PARAM[progressbarbackgoundtexture]</texture>
          </control>
          <!--Focus-->
          <control type="image">
            <animation effect="zoom" end="5,100" time="0" condition="Integer.IsGreater($PARAM[progressbarinfo],0) + Integer.IsLessOrEqual($PARAM[progressbarinfo],5)">Conditional</animation>
            <animation effect="zoom" end="10,100" time="0" condition="Integer.IsGreater($PARAM[progressbarinfo],5) + Integer.IsLessOrEqual($PARAM[progressbarinfo],10)">Conditional</animation>
            <animation effect="zoom" end="15,100" time="0" condition="Integer.IsGreater($PARAM[progressbarinfo],10) + Integer.IsLessOrEqual($PARAM[progressbarinfo],15)">Conditional</animation>
            <animation effect="zoom" end="20,100" time="0" condition="Integer.IsGreater($PARAM[progressbarinfo],15) + Integer.IsLessOrEqual($PARAM[progressbarinfo],20)">Conditional</animation>
            <animation effect="zoom" end="25,100" time="0" condition="Integer.IsGreater($PARAM[progressbarinfo],20) + Integer.IsLessOrEqual($PARAM[progressbarinfo],25)">Conditional</animation>
            <animation effect="zoom" end="30,100" time="0" condition="Integer.IsGreater($PARAM[progressbarinfo],25) + Integer.IsLessOrEqual($PARAM[progressbarinfo],30)">Conditional</animation>
            <animation effect="zoom" end="35,100" time="0" condition="Integer.IsGreater($PARAM[progressbarinfo],30) + Integer.IsLessOrEqual($PARAM[progressbarinfo],35)">Conditional</animation>
            <animation effect="zoom" end="40,100" time="0" condition="Integer.IsGreater($PARAM[progressbarinfo],35) + Integer.IsLessOrEqual($PARAM[progressbarinfo],40)">Conditional</animation>
            <animation effect="zoom" end="45,100" time="0" condition="Integer.IsGreater($PARAM[progressbarinfo],40) + Integer.IsLessOrEqual($PARAM[progressbarinfo],45)">Conditional</animation>
            <animation effect="zoom" end="50,100" time="0" condition="Integer.IsGreater($PARAM[progressbarinfo],45) + Integer.IsLessOrEqual($PARAM[progressbarinfo],50)">Conditional</animation>
            <animation effect="zoom" end="55,100" time="0" condition="Integer.IsGreater($PARAM[progressbarinfo],50) + Integer.IsLessOrEqual($PARAM[progressbarinfo],55)">Conditional</animation>
            <animation effect="zoom" end="60,100" time="0" condition="Integer.IsGreater($PARAM[progressbarinfo],55) + Integer.IsLessOrEqual($PARAM[progressbarinfo],60)">Conditional</animation>
            <animation effect="zoom" end="65,100" time="0" condition="Integer.IsGreater($PARAM[progressbarinfo],60) + Integer.IsLessOrEqual($PARAM[progressbarinfo],65)">Conditional</animation>
            <animation effect="zoom" end="70,100" time="0" condition="Integer.IsGreater($PARAM[progressbarinfo],65) + Integer.IsLessOrEqual($PARAM[progressbarinfo],70)">Conditional</animation>
            <animation effect="zoom" end="75,100" time="0" condition="Integer.IsGreater($PARAM[progressbarinfo],70) + Integer.IsLessOrEqual($PARAM[progressbarinfo],75)">Conditional</animation>
            <animation effect="zoom" end="80,100" time="0" condition="Integer.IsGreater($PARAM[progressbarinfo],75) + Integer.IsLessOrEqual($PARAM[progressbarinfo],80)">Conditional</animation>
            <animation effect="zoom" end="85,100" time="0" condition="Integer.IsGreater($PARAM[progressbarinfo],80) + Integer.IsLessOrEqual($PARAM[progressbarinfo],85)">Conditional</animation>
            <animation effect="zoom" end="90,100" time="0" condition="Integer.IsGreater($PARAM[progressbarinfo],85) + Integer.IsLessOrEqual($PARAM[progressbarinfo],90)">Conditional</animation>
            <animation effect="zoom" end="95,100" time="0" condition="Integer.IsGreater($PARAM[progressbarinfo],90) + Integer.IsLessOrEqual($PARAM[progressbarinfo],95)">Conditional</animation>
            <animation effect="zoom" end="97.5,100" time="0" condition="Integer.IsGreater($PARAM[progressbarinfo],95) + Integer.IsLess($PARAM[progressbarinfo],100)">Conditional</animation>
            <width>$PARAM[width]</width>
            <height>8</height>
            <texture colordiffuse="$PARAM[progressbarfocuscolor]">$PARAM[progressbarfocustexture]</texture>
          </control>
        </control>
        <!--Details-->
        <control type="grouplist">
          <left>60</left>
          <right>60</right>
          <top>$PARAM[top]</top>
          <orientation>vertical</orientation>
          <align>center</align>
          <itemgap>0</itemgap>
          <!-- Title-->
          <control type="label" id="$PARAM[titleid]">
            <left>0</left>
            <width>100%</width>
            <height>48</height>
            <align>$PARAM[textalign]</align>
            <scroll>true</scroll>
            <scrollsuffix> / </scrollsuffix>
            <font>MusicPlayer_Title</font>
            <label>$PARAM[titlelabel]</label>
            <textcolor>$PARAM[textcolor]</textcolor>
          </control>
          <!-- Details-->
          <control type="label" id="$PARAM[infoid]">
            <left>0</left>
            <width>100%</width>
            <height>36</height>
            <align>$PARAM[textalign]</align>
            <scroll>true</scroll>
            <scrollsuffix> / </scrollsuffix>
            <font>MusicPlayer_Info</font>
            <label>$PARAM[infolabel]</label>
            <textcolor>$PARAM[textcolor]</textcolor>
          </control>
        </control>
      </control>
    </definition>
  </include>

  <include name="IconDetails">
    <param name="visible" default="true"/>
    <param name="progressbarid" default=""/>
    <param name="progressbarvisible" default="false"/>
    <param name="progressbarinfo" default=""/>
    <param name="titleid" default=""/>
    <param name="titlelabel" default=""/>
    <param name="infoid" default=""/>
    <param name="infolabel" default=""/>
    <definition>
      <control type="group">
        <visible>$PARAM[visible]</visible>
        <include content="IconDetailsLayout">
          <param name="visible" value="Window.IsActive(home)"/>
          <param name="width" value="1560"/>
          <param name="height" value="180"/>
          <param name="progressbarid" value="$PARAM[progressbarid]"/>
          <param name="progressbarvisible" value="$PARAM[progressvisible]"/>
          <param name="progressbarwidth" value="600"/>
          <param name="titleid" value="$PARAM[titleid]"/>
          <param name="titlelabel" value="$PARAM[titlelabel]"/>
          <param name="infoid" value="$PARAM[infoid]"/>
          <param name="infolabel" value="$PARAM[infolabel]"/>
        </include>
        <include content="IconDetailsLayout">
          <param name="visible" value="Window.IsActive(fullscreenvideo) | String.IsEqual(Container.ViewMode,Billboard)"/>
          <param name="left" value="0"/>
          <param name="width" value="1740"/>
          <param name="height" value="180"/>
          <param name="progressbarid" value="$PARAM[progressbarid]"/>
          <param name="progressbarvisible" value="$PARAM[progressvisible]"/>
          <param name="titleid" value="$PARAM[titleid]"/>
          <param name="titlelabel" value="$PARAM[titlelabel]"/>
          <param name="infoid" value="$PARAM[infoid]"/>
          <param name="infolabel" value="$PARAM[infolabel]"/>
        </include>
        <include content="IconDetailsLayout">
          <param name="visible" value="String.IsEqual(Container.ViewMode,Showcase) + $EXP[ShowcaseView_Display_IsPosters]"/>
          <param name="left" value="900"/>
          <param name="width" value="1020"/>
          <param name="height" value="180"/>
          <param name="progressbarid" value="$PARAM[progressbarid]"/>
          <param name="progressbarvisible" value="$PARAM[progressvisible]"/>
          <param name="titleid" value="$PARAM[titleid]"/>
          <param name="titlelabel" value="$PARAM[titlelabel]"/>
          <param name="textalign" value="left"/>
          <param name="infoid" value="$PARAM[infoid]"/>
          <param name="infolabel" value="$PARAM[infolabel]"/>
        </include>
        <include content="IconDetailsLayout">
          <param name="visible" value="String.IsEqual(Container.ViewMode,Showcase) + $EXP[ShowcaseView_Display_IsSquare]"/>
          <param name="left" value="1260"/>
          <param name="width" value="660"/>
          <param name="height" value="180"/>
          <param name="progressbarid" value="$PARAM[progressbarid]"/>
          <param name="progressbarvisible" value="$PARAM[progressvisible]"/>
          <param name="titleid" value="$PARAM[titleid]"/>
          <param name="titlelabel" value="$PARAM[titlelabel]"/>
          <param name="textalign" value="left"/>
          <param name="infoid" value="$PARAM[infoid]"/>
          <param name="infolabel" value="$PARAM[infolabel]"/>
        </include>
        <include content="IconDetailsLayout">
          <param name="visible" value="String.IsEqual(Container.ViewMode,List)"/>
          <param name="left" value="840"/>
          <param name="width" value="900"/>
          <param name="height" value="180"/>
          <param name="progressbarid" value="$PARAM[progressbarid]"/>
          <param name="progressbarvisible" value="$PARAM[progressvisible]"/>
          <param name="titleid" value="$PARAM[titleid]"/>
          <param name="titlelabel" value="$PARAM[titlelabel]"/>
          <param name="infoid" value="$PARAM[infoid]"/>
          <param name="infolabel" value="$PARAM[infolabel]"/>
        </include>
        <include content="IconDetailsLayout">
          <param name="visible" value="String.IsEqual(Container.ViewMode,Strip) + $EXP[StripView_Display_IsPosters]"/>
          <param name="left" value="720"/>
          <param name="width" value="880"/>
          <param name="height" value="180"/>
          <param name="progressbarid" value="$PARAM[progressbarid]"/>
          <param name="progressbarvisible" value="$PARAM[progressvisible]"/>
          <param name="titleid" value="$PARAM[titleid]"/>
          <param name="titlelabel" value="$PARAM[titlelabel]"/>
          <param name="infoid" value="$PARAM[infoid]"/>
          <param name="infolabel" value="$PARAM[infolabel]"/>
        </include>


        <include content="IconDetailsLayout">
          <param name="visible" value="[String.IsEqual(Container.ViewMode,Strip) + $EXP[StripView_Display_IsFanart] + !Skin.String(StripView_Details,Off)]"/>
          <param name="left" value="720"/>
          <param name="width" value="880"/>
          <param name="height" value="240"/>
          <param name="progressbarid" value="$PARAM[progressbarid]"/>
          <param name="progressbarvisible" value="$PARAM[progressvisible]"/>
          <param name="titleid" value="$PARAM[titleid]"/>
          <param name="titlelabel" value="$PARAM[titlelabel]"/>
          <param name="infoid" value="$PARAM[infoid]"/>
          <param name="infolabel" value="$PARAM[infolabel]"/>
        </include>
        <include content="IconDetailsLayout">
          <param name="visible" value="String.IsEqual(Container.ViewMode,Strip) + $EXP[StripView_Display_IsFanart] + Skin.String(StripView_Details,Off)"/>
          <param name="left" value="400"/>
          <param name="width" value="880"/>
          <param name="height" value="240"/>
          <param name="progressbarid" value="$PARAM[progressbarid]"/>
          <param name="progressbarvisible" value="$PARAM[progressvisible]"/>
          <param name="titleid" value="$PARAM[titleid]"/>
          <param name="titlelabel" value="$PARAM[titlelabel]"/>
          <param name="infoid" value="$PARAM[infoid]"/>
          <param name="infolabel" value="$PARAM[infolabel]"/>
        </include>
        <include content="IconDetailsLayout">
          <param name="visible" value="String.IsEqual(Container.ViewMode,Strip) + $EXP[StripView_Display_IsSquare] + !Skin.String(StripView_Details,Off)"/>
          <param name="left" value="960"/>
          <param name="width" value="960"/>
          <param name="height" value="240"/>
          <param name="progressbarid" value="$PARAM[progressbarid]"/>
          <param name="progressbarvisible" value="$PARAM[progressvisible]"/>
          <param name="textalign" value="left"/>
          <param name="titleid" value="$PARAM[titleid]"/>
          <param name="titlelabel" value="$PARAM[titlelabel]"/>
          <param name="infoid" value="$PARAM[infoid]"/>
          <param name="infolabel" value="$PARAM[infolabel]"/>
        </include>
        <include content="IconDetailsLayout">
          <param name="visible" value="String.IsEqual(Container.ViewMode,Strip) + $EXP[StripView_Display_IsSquare] + Skin.String(StripView_Details,Off)"/>
          <param name="left" value="885"/>
          <param name="width" value="1035"/>
          <param name="height" value="240"/>
          <param name="progressbarid" value="$PARAM[progressbarid]"/>
          <param name="progressbarvisible" value="$PARAM[progressvisible]"/>
          <param name="textalign" value="left"/>
          <param name="titleid" value="$PARAM[titleid]"/>
          <param name="titlelabel" value="$PARAM[titlelabel]"/>
          <param name="infoid" value="$PARAM[infoid]"/>
          <param name="infolabel" value="$PARAM[infolabel]"/>
        </include>
        <include content="IconDetailsLayout">
          <param name="visible" value="String.IsEqual(Container.ViewMode,Grid) + [$EXP[GridView_Display_IsPosters] | $EXP[GridView_Display_IsSquare]]"/>
          <param name="left" value="780"/>
          <param name="width" value="900"/>
          <param name="height" value="180"/>
          <param name="progressbarid" value="$PARAM[progressbarid]"/>
          <param name="progressbarvisible" value="$PARAM[progressvisible]"/>
          <param name="titleid" value="$PARAM[titleid]"/>
          <param name="titlelabel" value="$PARAM[titlelabel]"/>
          <param name="infoid" value="$PARAM[infoid]"/>
          <param name="infolabel" value="$PARAM[infolabel]"/>
        </include>
        <include content="IconDetailsLayout">
          <param name="visible" value="String.IsEqual(Container.ViewMode,Grid) + $EXP[GridView_Display_IsFanart]"/>
          <param name="left" value="664"/>
          <param name="width" value="1004"/>
          <param name="height" value="180"/>
          <param name="progressbarid" value="$PARAM[progressbarid]"/>
          <param name="progressbarvisible" value="$PARAM[progressvisible]"/>
          <param name="titleid" value="$PARAM[titleid]"/>
          <param name="titlelabel" value="$PARAM[titlelabel]"/>
          <param name="infoid" value="$PARAM[infoid]"/>
          <param name="infolabel" value="$PARAM[infolabel]"/>
        </include>
      </control>
    </definition>
  </include>

	<!-- Clock -->
	<include name="Clock">
    <param name="backgroundcolor" default="$VAR[AccentColor]"/>
    <param name="backgroundopacity" default="views/white_100.png"/>
    <param name="textcolor" default="$VAR[LightColor]"/>
    <definition>
      <control type="group">
        <right>0</right>
        <top>0</top>
        <width>180</width>
        <height>180</height>
        <control type="image">
          <texture colordiffuse="$PARAM[backgroundcolor]">$PARAM[backgroundopacity]</texture>
        </control>
    		<control type="grouplist">
    			<top>55</top>
    			<width>180</width>
    			<height>70</height>
    			<align>center</align>
    			<itemgap>3</itemgap>
    			<orientation>horizontal</orientation>
    			<usecontrolcoords>true</usecontrolcoords>
    			<control type="label">
    				<width>auto</width>
    				<height>70</height>
    				<font>List_Title_Focused</font>
    				<align>right</align>
    				<textcolor>$PARAM[textcolor]</textcolor>
    				<label>$INFO[System.Time(hh)]</label>
    			</control>
    			<control type="label">
    				<width>auto</width>
    				<height>55</height>
    				<top>13</top>
    				<font>Main_Menu_Unfocused</font>
    				<align>right</align>
    				<textcolor>$PARAM[textcolor]</textcolor>
    				<label>$INFO[System.Time(mm)]</label>
    			</control>
    		</control>
      </control>
    </definition>
	</include>


	<!--Has Next/Previous horizontal
	<include name="HasNextPreviousHorizontal">
		<control type="group">
			<include>HideMediaDetails</include>
			<top>520</top>
			<height>40</height>
			<left>25</left>
			<width>1870</width>
			<control type="image">
				<visible>Container(504).HasPrevious</visible>
				<include>ContentFadeAnimation</include>
				<left>0</left>
				<width>25</width>
				<aspectratio>keep</aspectratio>
				<texture colordiffuse="$VAR[TextColor]">views/arrow_left.png</texture>
			</control>
			<control type="image">
				<visible>Container(504).HasNext</visible>
				<include>ContentFadeAnimation</include>
				<right>0</right>
				<width>25</width>
				<aspectratio>keep</aspectratio>
				<texture colordiffuse="$VAR[TextColor]" flipx="true">views/arrow_left.png</texture>
			</control>
		</control>
	</include>









	<!-- Window overlay image -->
	<include name="WindowBackgroundImage">
		<control type="image">
			<include>FullscreenDimensions</include>
			<texture colordiffuse="$VAR[BackgroundColor]">views/white_100.png</texture>
		</control>
	</include>
	<!-- Dialog background image -->
	<include name="DialogBackgroundImage">
		<control type="group">
			<include>WindowFadeAnimation</include>
			<control type="image">
				<include>FullscreenDimensions</include>
				<texture colordiffuse="$VAR[AccentColor]">views/white_100.png</texture>
			</control>
		</control>
	</include>

	<!-- Options background image -->
	<include name="OptionsBackgroundImage">
		<control type="image">
			<include>FullscreenDimensions</include>
			<texture border="20">dialogs/OptionsBackground.png</texture>
		</control>
	</include>


	<include name="Opacity">
		<!-- Opacity -->
		<animation effect="fade" start="100" end="80" condition="String.IsEmpty(Skin.String(Opacity))">Conditional</animation>
		<animation effect="fade" start="100" end="0" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[0])">Conditional</animation>
		<animation effect="fade" start="100" end="1" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[1])">Conditional</animation>
		<animation effect="fade" start="100" end="2" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[2])">Conditional</animation>
		<animation effect="fade" start="100" end="3" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[3])">Conditional</animation>
		<animation effect="fade" start="100" end="4" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[4])">Conditional</animation>
		<animation effect="fade" start="100" end="5" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[5])">Conditional</animation>
		<animation effect="fade" start="100" end="6" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[6])">Conditional</animation>
		<animation effect="fade" start="100" end="7" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[7])">Conditional</animation>
		<animation effect="fade" start="100" end="8" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[8])">Conditional</animation>
		<animation effect="fade" start="100" end="9" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[9])">Conditional</animation>
		<animation effect="fade" start="100" end="10" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[10])">Conditional</animation>
		<animation effect="fade" start="100" end="11" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[11])">Conditional</animation>
		<animation effect="fade" start="100" end="12" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[12])">Conditional</animation>
		<animation effect="fade" start="100" end="13" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[13])">Conditional</animation>
		<animation effect="fade" start="100" end="14" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[14])">Conditional</animation>
		<animation effect="fade" start="100" end="15" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[15])">Conditional</animation>
		<animation effect="fade" start="100" end="16" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[16])">Conditional</animation>
		<animation effect="fade" start="100" end="17" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[17])">Conditional</animation>
		<animation effect="fade" start="100" end="18" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[18])">Conditional</animation>
		<animation effect="fade" start="100" end="19" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[19])">Conditional</animation>
		<animation effect="fade" start="100" end="20" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[20])">Conditional</animation>
		<animation effect="fade" start="100" end="21" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[21])">Conditional</animation>
		<animation effect="fade" start="100" end="22" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[22])">Conditional</animation>
		<animation effect="fade" start="100" end="23" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[23])">Conditional</animation>
		<animation effect="fade" start="100" end="24" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[24])">Conditional</animation>
		<animation effect="fade" start="100" end="25" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[25])">Conditional</animation>
		<animation effect="fade" start="100" end="26" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[26])">Conditional</animation>
		<animation effect="fade" start="100" end="27" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[27])">Conditional</animation>
		<animation effect="fade" start="100" end="28" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[28])">Conditional</animation>
		<animation effect="fade" start="100" end="29" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[29])">Conditional</animation>
		<animation effect="fade" start="100" end="30" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[30])">Conditional</animation>
		<animation effect="fade" start="100" end="31" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[31])">Conditional</animation>
		<animation effect="fade" start="100" end="32" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[32])">Conditional</animation>
		<animation effect="fade" start="100" end="33" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[33])">Conditional</animation>
		<animation effect="fade" start="100" end="34" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[34])">Conditional</animation>
		<animation effect="fade" start="100" end="35" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[35])">Conditional</animation>
		<animation effect="fade" start="100" end="36" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[36])">Conditional</animation>
		<animation effect="fade" start="100" end="37" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[37])">Conditional</animation>
		<animation effect="fade" start="100" end="38" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[38])">Conditional</animation>
		<animation effect="fade" start="100" end="39" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[39])">Conditional</animation>
		<animation effect="fade" start="100" end="40" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[40])">Conditional</animation>
		<animation effect="fade" start="100" end="41" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[41])">Conditional</animation>
		<animation effect="fade" start="100" end="42" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[42])">Conditional</animation>
		<animation effect="fade" start="100" end="43" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[43])">Conditional</animation>
		<animation effect="fade" start="100" end="44" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[44])">Conditional</animation>
		<animation effect="fade" start="100" end="45" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[45])">Conditional</animation>
		<animation effect="fade" start="100" end="46" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[46])">Conditional</animation>
		<animation effect="fade" start="100" end="47" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[47])">Conditional</animation>
		<animation effect="fade" start="100" end="48" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[48])">Conditional</animation>
		<animation effect="fade" start="100" end="49" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[49])">Conditional</animation>
		<animation effect="fade" start="100" end="50" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[50])">Conditional</animation>
		<animation effect="fade" start="100" end="51" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[51])">Conditional</animation>
		<animation effect="fade" start="100" end="52" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[52])">Conditional</animation>
		<animation effect="fade" start="100" end="53" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[53])">Conditional</animation>
		<animation effect="fade" start="100" end="54" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[54])">Conditional</animation>
		<animation effect="fade" start="100" end="55" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[55])">Conditional</animation>
		<animation effect="fade" start="100" end="56" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[56])">Conditional</animation>
		<animation effect="fade" start="100" end="57" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[57])">Conditional</animation>
		<animation effect="fade" start="100" end="58" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[58])">Conditional</animation>
		<animation effect="fade" start="100" end="59" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[59])">Conditional</animation>
		<animation effect="fade" start="100" end="60" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[60])">Conditional</animation>
		<animation effect="fade" start="100" end="61" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[61])">Conditional</animation>
		<animation effect="fade" start="100" end="62" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[62])">Conditional</animation>
		<animation effect="fade" start="100" end="63" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[63])">Conditional</animation>
		<animation effect="fade" start="100" end="64" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[64])">Conditional</animation>
		<animation effect="fade" start="100" end="65" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[65])">Conditional</animation>
		<animation effect="fade" start="100" end="66" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[66])">Conditional</animation>
		<animation effect="fade" start="100" end="67" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[67])">Conditional</animation>
		<animation effect="fade" start="100" end="68" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[68])">Conditional</animation>
		<animation effect="fade" start="100" end="69" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[69])">Conditional</animation>
		<animation effect="fade" start="100" end="70" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[70])">Conditional</animation>
		<animation effect="fade" start="100" end="71" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[71])">Conditional</animation>
		<animation effect="fade" start="100" end="72" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[72])">Conditional</animation>
		<animation effect="fade" start="100" end="73" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[73])">Conditional</animation>
		<animation effect="fade" start="100" end="74" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[74])">Conditional</animation>
		<animation effect="fade" start="100" end="75" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[75])">Conditional</animation>
		<animation effect="fade" start="100" end="76" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[76])">Conditional</animation>
		<animation effect="fade" start="100" end="77" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[77])">Conditional</animation>
		<animation effect="fade" start="100" end="78" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[78])">Conditional</animation>
		<animation effect="fade" start="100" end="79" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[79])">Conditional</animation>
		<animation effect="fade" start="100" end="80" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[80])">Conditional</animation>
		<animation effect="fade" start="100" end="81" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[81])">Conditional</animation>
		<animation effect="fade" start="100" end="82" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[82])">Conditional</animation>
		<animation effect="fade" start="100" end="83" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[83])">Conditional</animation>
		<animation effect="fade" start="100" end="84" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[84])">Conditional</animation>
		<animation effect="fade" start="100" end="85" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[85])">Conditional</animation>
		<animation effect="fade" start="100" end="86" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[86])">Conditional</animation>
		<animation effect="fade" start="100" end="87" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[87])">Conditional</animation>
		<animation effect="fade" start="100" end="88" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[88])">Conditional</animation>
		<animation effect="fade" start="100" end="89" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[89])">Conditional</animation>
		<animation effect="fade" start="100" end="90" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[90])">Conditional</animation>
		<animation effect="fade" start="100" end="91" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[91])">Conditional</animation>
		<animation effect="fade" start="100" end="92" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[92])">Conditional</animation>
		<animation effect="fade" start="100" end="93" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[93])">Conditional</animation>
		<animation effect="fade" start="100" end="94" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[94])">Conditional</animation>
		<animation effect="fade" start="100" end="95" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[95])">Conditional</animation>
		<animation effect="fade" start="100" end="96" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[96])">Conditional</animation>
		<animation effect="fade" start="100" end="97" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[97])">Conditional</animation>
		<animation effect="fade" start="100" end="98" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[98])">Conditional</animation>
		<animation effect="fade" start="100" end="99" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[99])">Conditional</animation>
		<animation effect="fade" start="100" end="100" condition="String.IsEqual(Skin.String(Opacity),$NUMBER[100])">Conditional</animation>
	</include>
	<!-- Hidden control -->
	<include name="HiddenControl">
		<left>-10</left>
		<top>-10</top>
		<width>1</width>
		<height>1</height>
		<font></font>
		<texture></texture>
		<texturefocus></texturefocus>
		<texturenofocus></texturenofocus>
		<alttexturenofocus></alttexturenofocus>
		<alttexturefocus></alttexturefocus>
		<textureradiofocus></textureradiofocus>
		<textureradionofocus></textureradionofocus>
	</include>
	<!-- Dialog Button -->
	<include name="DialogButton">
		<width>auto</width>
		<height>75</height>
		<font>Light36</font>
		<aligny>top</aligny>
		<textoffsetx>30</textoffsetx>
		<textoffsety>9</textoffsety>
		<textcolor>$VAR[TextColor]</textcolor>
		<texture></texture>
		<texturefocus colordiffuse="$VAR[BackgroundColor]">common/white.png</texturefocus>
		<texturenofocus></texturenofocus>
	</include>
	<!-- Conq -->
	<!-- Time -->
	<include name="Time">
		<control type="button">
			<left>120</left>
			<top>110</top>
			<width>1680</width>
			<height>33</height>
			<aligny>top</aligny>
			<label>[COLOR TextColor1]$VAR[HeadingLabel][/COLOR]</label>
			<label2>$INFO[System.Time]</label2>
			<font>Font33</font>
			<textcolor>$VAR[UnFocusedColor]</textcolor>
			<animation type="WindowOpen" condition="Window.Previous(startup)">
				<effect type="fade" start="50" end="100" time="200" tween="cubic" easing="out"/>
			</animation>
		</control>
	</include>
	<!-- Shutdown buttons -->
	<include name="ShutdownButtons">
		<width>600</width>
		<height>45</height>
		<font>Font48</font>
		<textcolor>$VAR[TextColor]</textcolor>
		<focusedcolor>$VAR[TextColor]</focusedcolor>
	</include>
	<!-- Options buttons -->
	<include name="OptionButtons">
		<width>480</width>
		<height>54</height>
		<font>Font48</font>
		<textcolor>$VAR[TextColor]</textcolor>
		<focusedcolor>$VAR[TextColor]</focusedcolor>
	</include>
	<!-- Keyboard buttons -->
	<include name="KeyboardButtons">
		<width>84</width>
		<height>74</height>
		<font>Font48</font>
		<align>center</align>
		<textoffsetx>10</textoffsetx>
	</include>
	<!-- OSD Play buttons -->
	<include name="OSDPlayStopButtons">
		<control type="togglebutton" id="1">
			<width>60</width>
			<height>60</height>
			<texturefocus>osd/OSDPauseFO.png</texturefocus>
			<texturenofocus>osd/OSDPauseNF.png</texturenofocus>
			<usealttexture>Player.Paused | Player.Forwarding | Player.Rewinding</usealttexture>
			<alttexturefocus>osd/OSDPlayFO.png</alttexturefocus>
			<alttexturenofocus>osd/OSDPlayNF.png</alttexturenofocus>
			<onclick>PlayerControl(Play)</onclick>
		</control>
		<control type="button" id="2">
			<width>60</width>
			<height>60</height>
			<texturefocus>osd/OSDStopFO.png</texturefocus>
			<texturenofocus>osd/OSDStopNF.png</texturenofocus>
			<onclick>PlayerControl(Stop)</onclick>
		</control>
	</include>
	<!-- OSD Stop buttons -->
	<include name="OSDStopButton">
		<control type="button" id="1">
			<width>60</width>
			<height>60</height>
			<texturefocus>osd/OSDStopFO.png</texturefocus>
			<texturenofocus>osd/OSDStopNF.png</texturenofocus>
			<onclick>PlayerControl(Stop)</onclick>
		</control>
	</include>
	<!-- Item count -->
	<include name="ItemCount">
		<control type="grouplist">
			<right>120</right>
			<bottom>110</bottom>
			<width>800</width>
			<height>44</height>
			<itemgap>6</itemgap>
			<align>right</align>
			<orientation>horizontal</orientation>
			<usecontrolcoords>true</usecontrolcoords>
			<visible>Integer.IsGreater(Container.NumItems,0)</visible>
			<control type="label">
				<top>3</top>
				<width>auto</width>
				<height>44</height>
				<align>right</align>
				<label>$INFO[Container.NumItems]</label>
				<font>Font25</font>
				<textcolor>$VAR[UnFocusedColor]</textcolor>
			</control>
			<control type="label">
				<width>auto</width>
				<height>44</height>
				<align>right</align>
				<label>$VAR[ContentType]</label>
				<font>Font33</font>
				<textcolor>$VAR[UnFocusedColor]</textcolor>
			</control>
		</control>
	</include>
</includes>
